{"version":3,"sources":["components/QueryEditor/QueryEditor.tsx","components/Query/Query.tsx","components/Modal/Modal.tsx","components/Pages/Page.tsx","components/CustomInput/CustomInput.tsx","data.controller/utils/data.fetch.ts","data.controller/data.types.ts","data.controller/data.controller.ts","components/QueryViewer/QueryViewer.tsx","components/SummaryViewer/SummaryViewer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TUIQueryItemEnum","Query","data","index","onChange","onView","hasResults","onRemove","className","onClick","evt","topN","minLength","maxLength","Modal","children","onDeactivate","isActive","useState","isChildVisible","setIsChildVisible","isChildActivated","useRef","current","setTimeout","stopPropagation","Page","onClose","CustomInputText","value","handleChange","extraClasses","placeholder","disabled","preventDefault","type","target","CustomInputNumberUndefined","min","max","step","willPotentiallyCacheThis","toString","cachedValue","setCachedValue","undefined","defaultProps","Number","MAX_SAFE_INTEGER","QueryEditor","localData","_setLocalData","setLocalData","val","field","tmp","TOPN","parseFloat","MIN","MAX","httpRequest","_url","parameters","method","headers","_header","url","options","toLowerCase","keys","Object","validParams","values","reduce","acc","item","join","key","JSON","stringify","console","log","Promise","resolve","reject","fetch","then","res","json","catch","err","timestampToLocaleString","ts","Date","getTime","getTimezoneOffset","toISOString","replace","typeConverter","toBookSummary","bookObj","id","meta","idType","wordsCount","NaN","uniqueWordsCount","summaryDurationSec","createdAt","_createdAt","mostFrequentWord","this","toTokenSummary","leastFrequentWord","longestWord","shortestWord","results","map","toQuerySummary","resObj","uiQuery","toUIQueryItem","durationMs","tokenObj","frequency","length","minTokenLength","maxTokenLength","topNCount","DataController","urlBaseDevelopment","urlBase","urlGetAllBooks","urlProcessABook","window","location","origin","indexOf","buildURL","rawBooks","rawBook","bookId","cb","a","QueryViewer","onCopy","summary","toFixed","SummaryViewer","substr","App","dc","getVersion","isModalActive","setIsModalActive","isEditingQuery","setIsEditingQuery","isViewingResult","setIsViewingResult","isViewingSummary","setIsViewingSummary","isFetching","setIsFetching","indexOfQueryOnModal","setIndexOfQueryOnModal","setHasResults","textToProcess","setTextToProcess","feedback","setFeedback","queries","setQueries","queriesResults","setQueriesResults","handleModalClose","handleBookProcessing","processBook","book","handleCopy","text","navigator","clipboard","writeText","warn","query","queryIndex","qs","filter","q","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"uVASKA,E,oFCyCUC,G,YAlCiB,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SAG3E,OACE,yBAAKC,UAAU,mBAEb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,eAAb,YAAuCL,GACvC,0BAAMK,UAAU,eAEZF,GACE,0BAAME,UAAU,eAAeC,QAAS,SAAAC,GAAG,OAAEL,MAC3C,uBAAGG,UAAU,gBAInB,0BAAMA,UAAU,aAAaC,QAAS,SAAAC,GAAG,OAAEH,MAAY,uBAAGC,UAAU,kBACpE,0BAAMA,UAAU,eAAeC,QAAS,SAAAC,GAAG,OAAEN,MAAY,uBAAGI,UAAU,yBAK1E,uBAAGA,UAAU,cAAb,uBAEoBN,EAAKS,KAFzB,+DAEoFT,EAAKU,UAFzF,gBAE0GV,EAAKW,eCCtGC,G,MA9BiB,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,aAAaC,EAAc,EAAdA,SAAc,EAEzBC,oBAAkB,GAFO,mBAE9DC,EAF8D,KAE9CC,EAF8C,KAGjEC,EAAmBC,kBAAgB,GASvC,OARGL,GAAaI,EAAiBE,SAAYJ,IAC3CE,EAAiBE,SAAU,EAC3BC,YAAW,WACTJ,GAAkB,KACjB,MAKH,yBAAKZ,UAAS,0BAAqBS,EAAS,0BAA0B,IAChER,QAAS,SAAAC,GACPW,EAAiBE,SAAU,EAC3BP,IACAI,GAAkB,GAClBV,EAAIe,oBAGV,yBAAKjB,UAAS,mCAA8BW,EAAe,0BAA0B,IAAMV,QAAS,SAAAC,GAAG,OAAIA,EAAIe,oBAC5GV,MCZMW,G,MAbgB,SAAC,GAAyB,IAAxBX,EAAuB,EAAvBA,SAAUY,EAAa,EAAbA,QAEzC,OACE,yBAAKnB,UAAU,kBACb,yBAAKA,UAAU,gBACZO,GAEH,yBAAKP,UAAU,aAAaC,QAAS,SAAAC,GAAG,OAAEiB,MAAW,8BAAM,uBAAGnB,UAAU,6BCSxEoB,G,YAAmC,SAAC,GAAgE,IAA/DC,EAA8D,EAA9DA,MAAOC,EAAuD,EAAvDA,aAAcC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SACvF,OACI,yBAAKzB,UAAS,2DAAsDuB,EAAtD,YAAsEE,EAAW,yBAA0B,KACrH,yBAAKzB,UAAU,oBAAoBC,QAAS,SAAAC,GAAQA,EAAIe,kBAAmBf,EAAIwB,oBAC/E,2BAAOC,KAAK,OAAON,MAAOA,EAAOzB,SAAU,SAAAM,GAAG,OAAEoB,EAAapB,EAAI0B,OAAOP,QAAQG,YAAaA,IAC7F,0BAAMxB,UAAU,0BAAyB,uBAAGA,UAAU,mBAgB5D6B,EAAoD,SAAC,GAAgF,IAA/ER,EAA8E,EAA9EA,MAAOC,EAAuE,EAAvEA,aAAcC,EAAyD,EAAzDA,aAAcC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,SAAUK,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,KAatHC,EAAmCZ,EAAMa,WAbuF,EAchGxB,qBAdgG,mBAc/HyB,EAd+H,KAclHC,EAdkH,KAgBtI,OACI,yBAAKpC,UAAS,2DAAsDuB,EAAtD,YAAsEE,EAAW,yBAA0B,KACrH,yBAAKzB,UAAU,oBAAoBC,QAAS,SAAAC,GAAQA,EAAIe,kBAAmBf,EAAIwB,oBAC/E,2BAAOC,KAAK,SAASN,MAAOc,EAAc,GAAKd,EAAOzB,SAAU,SAAAM,GACpDA,EAAI0B,OAAOP,OAIXe,OAAeC,GACff,EAAapB,EAAI0B,OAAOP,SAJxBe,EAAeH,GACfX,EAAaW,KAKlBH,IAAKA,EAAKC,IAAKA,EAAKC,KAAMA,EAAMR,YAAaA,IACpD,0BAAMxB,UAAU,0BAAyB,uBAAGA,UAAU,kBA8BlEoB,EAAgBkB,aAAe,CAC3BjB,MAAO,GACPE,aAAc,GACdC,YAAa,kBACbC,UAAU,GAMFc,OAAOC,iBACVD,OAAOC,iBAIhB,eAA2CpB,EAAgBkB,cAC3D,eAA6ClB,EAAgBkB,c,SJ9GxD9C,O,eAAAA,I,aAAAA,I,cAAAA,M,KASL,IAqCeiD,EArCuB,SAAC,GAAsB,IAArB/C,EAAoB,EAApBA,KAAME,EAAc,EAAdA,SAAc,EAEvBc,mBAAuBhB,GAFA,mBAEnDgD,EAFmD,KAExCC,EAFwC,KAGpDC,EAAe,SAACC,EAAaC,GACjC,IAAIC,EAAoBL,EACvBI,IAAUtD,EAAiBwD,OAAUD,EAAI5C,KAAO8C,WAAWJ,IAC3DC,IAAUtD,EAAiB0D,MAASH,EAAI3C,UAAY6C,WAAWJ,IAC/DC,IAAUtD,EAAiB2D,MAASJ,EAAI1C,UAAY4C,WAAWJ,IAChEF,EAAc,eAAII,KAEpB,OACY,yBAAK/C,UAAU,gBAEb,yBAAKA,UAAU,cACb,yBAAKA,UAAW,mBAAhB,8CACA,kBAAC,EAAD,CAA4BqB,MAAOqB,EAAUvC,KAAMmB,aAAc,SAACuB,GAAD,OAAOD,EAAaC,EAAKrD,EAAiBwD,UAG7G,yBAAKhD,UAAU,cACb,yBAAKA,UAAW,mBAAhB,8CACA,kBAAC,EAAD,CAA4BqB,MAAOqB,EAAUtC,UAAWkB,aAAc,SAACuB,GAAD,OAAOD,EAAaC,EAAKrD,EAAiB0D,SAGlH,yBAAKlD,UAAU,cACb,yBAAKA,UAAW,mBAAhB,8CACA,kBAAC,EAAD,CAA4BqB,MAAOqB,EAAUrC,UAAWiB,aAAc,SAACuB,GAAD,OAAOD,EAAaC,EAAKrD,EAAiB2D,SAGlH,yBAAKnD,UAAU,cACb,4BAAQA,UAAU,eAAeC,QAAS,kBAAIL,EAAS,eAAI8C,MAA3D,iB,cKuBHU,EArEK,SACEC,EACAC,GAEsC,IADtCC,EACqC,uDADpB,MACjBC,EAAqC,uCAGrDC,EAAU,CAAC,eAAgB,oBAC3BC,EAAcL,EAOdM,EAAe,CACjBJ,OAAQA,EACRC,QAAQ,eAAKC,EAAN,GAAkBD,IAS3B,GAAGF,EACD,OAAOC,EAAOK,eACZ,IAAK,MAIH,IAAMC,EAAOC,OAAOD,KAAKP,GACnBS,EAAcD,OAAOE,OAAOV,GACPW,QAAO,SAACC,EAAKC,EAAMxE,GAEhB,OADAwE,IAASD,EAAIL,EAAKlE,IAAUwE,GACrBD,IAET,IAEzBJ,OAAOE,OAAOD,GAAaK,KAAK,MACjCV,GAAYI,OAAOD,KAAKE,GAAaE,QAAO,SAACC,EAAKG,EAAK1E,GAAX,gBAAwBuE,GAAxB,OAAsC,IAARvE,EAAU,IAAI,KAA5C,OAAkD0E,EAAlD,YAAyDN,EAAYM,MAAQ,KAG3H,MACF,QAEEV,EAAO,KAAWW,KAAKC,UAAUjB,GAUvC,OALAkB,QAAQC,IAAR,+BAAoCf,EAApC,2BAA0DY,KAAKC,UAAUZ,GAAzE,MAKO,IAAIe,SAAQ,SAACC,EAASC,GAC3BC,MAAMnB,EAAKC,GAEVmB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAApF,GAAI,OAAEiF,EAAQjF,MACnBuF,OAAM,SAAAC,GAAG,OAAIN,EAAOM,UCVnBC,EAA0B,SAACC,GAAD,OAAc,IAAIC,KAAK,IAAIA,KAAKD,GAAIE,UAA6C,KAAjC,IAAID,MAAOE,qBAA6BC,cAAcC,QAAQ,YAAY,IAAIA,QAAQ,IAAI,MACpKC,EAAgC,CACpCC,cADoC,SACtBC,GAA4B,IAAD,OACvC,MAAO,CACLC,GAAID,EAAO,GAASA,EAAO,GAAS,GACpCE,KAAMF,EAAO,KAAWA,EAAO,KAAW,GAC1CG,OAAQH,EAAO,OAAaA,EAAO,OAAa,GAEhDI,WAAYJ,EAAO,YAA4C,IAA1BA,EAAO,WAAuBA,EAAO,WAAiBK,IAC3FC,iBAAkBN,EAAO,kBAAwD,IAAhCA,EAAO,iBAA8BA,EAAO,iBAAuBK,IACpHE,mBAAoBP,EAAO,oBAA4D,IAAlCA,EAAO,mBAAgCA,EAAO,mBAAyBK,IAC5HG,UAAWR,EAAO,UAAgBA,EAAO,UAAgB,EACzDS,WAAYT,EAAO,UAAgBT,EAAwBS,EAAO,WAAiB,eAEnFU,iBAAkBC,KAAKC,eAAeZ,EAAO,kBAC7Ca,kBAAmBF,KAAKC,eAAeZ,EAAO,mBAC9Cc,YAAaH,KAAKC,eAAeZ,EAAO,aACxCe,aAAcJ,KAAKC,eAAeZ,EAAO,cAEzCgB,QAAShB,EAAO,QAAcA,EAAO,QAAYiB,KAAI,SAAC9B,GAAD,OAAc,EAAK+B,eAAe/B,MAAQ,KAMnG+B,eAxBoC,SAwBrBC,GAA6B,IAAD,OACvC,MAAO,CACLC,QAAST,KAAKU,cAAcF,EAAM,eAAoBA,EAAM,eAAoBA,EAAM,WACtFX,UAAWW,EAAM,UAAgBA,EAAM,UAAgB,EACvDV,WAAYU,EAAM,UAAgB5B,EAAwB4B,EAAM,WAAiB,eACjFG,WAAYH,EAAM,YAA2C,IAAzBA,EAAM,WAAuBA,EAAM,WAAiBd,IACxFvG,KAAMqH,EAAM,KAAWA,EAAM,KAASF,KAAI,SAAC1C,GAAD,OAAe,EAAKqC,eAAerC,MAAS,KAK5FqC,eAnCoC,SAmCrBW,GACX,MAAO,CACL9C,IAAK8C,EAAQ,IAAUA,EAAQ,IAAU,GACzCC,UAAWD,EAAQ,WAA2C,IAA1BA,EAAQ,UAAsBA,EAAQ,UAAgBlB,IAC1FoB,OAAQF,EAAQ,QAAqC,IAAvBA,EAAQ,OAAmBA,EAAQ,OAAalB,MAKpFgB,cA5CoC,SA4CtBK,EAAwBC,EAAwBC,GAC1D,MAAO,CACLpH,UAAWkH,GAAqC,IAAnBA,EAAuBA,EAAiBrB,IACrE5F,UAAWkH,GAAqC,IAAnBA,EAAwBA,EAAiBtB,IACtE9F,KAAMqH,GAA2B,IAAdA,EAAmBA,EAAYvB,OC/FrCwB,E,WAiBnB,aAAc,yBAfNC,mBAA6B,yBAexB,KAZLC,QAAkB,GAYb,KAXLC,eAAyB,sBAWpB,KATLC,gBAA0B,sBAoBhCtB,KAAKoB,QAAL,UAAkBG,OAAOC,SAASC,OAAlC,MAC0C,IAAvCzB,KAAKoB,QAAQM,QAAQ,eACtB1B,KAAKoB,QAAUpB,KAAKmB,oB,yDAhBtB,MAAO,U,8CA+BAhE,GACP,MAAM,GAAN,OAAU6C,KAAKoB,SAAf,OAAyBjE,K,iKAQJN,EAAYmD,KAAK2B,SAAS3B,KAAKqB,iB,cAAhDO,E,yBACIA,EAAmBtB,KAAI,SAACuB,GAAD,OAAkB1C,EAAcC,cAAcyC,O,iLAE7DC,G,uFACIjF,EAAY,GAAD,OAAImD,KAAK2B,SAAS3B,KAAKqB,gBAAvB,YAA0CS,I,cAArED,E,yBACG1C,EAAcC,cAAcyC,I,yIAEzBpB,EAAmBsB,GAAqC,IAAD,OACjE,OAAO,IAAI5D,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,SAAA2D,EAAA,sEACXnF,EAAY,GAAD,OAAI,EAAK8E,SAAS,EAAKL,kBAAoBb,EAAS,QACpElC,MAAK,SAACC,GACLP,QAAQC,IAAIM,GACZuD,IACA3D,EAAQe,EAAcC,cAAcZ,OAErCE,OAAM,SAACC,GACNN,EAAOM,MARQ,2CAAZ,6D,KCcIsD,G,MAtEuB,SAAC,GAAoB,IAAnB9I,EAAkB,EAAlBA,KAAM+I,EAAY,EAAZA,OAGtCC,EAAU,4BACAhJ,EAAKwH,WAAW,KAAMyB,QAAQ,GAD9B,6BAEJjJ,EAAK2G,WAFD,8BAGC3G,EAAKwH,WAAW,KAAMyB,QAAQ,GAH/B,qDAIqBjJ,EAAKsH,QAAQ7G,KAJlC,uDAIqFT,EAAKsH,QAAQ5G,UAJlG,kBAIqHV,EAAKsH,QAAQ3G,UAJlI,yBAOdX,EAAKA,KAAKuE,QAAO,SAACC,EAAKa,EAAKpF,GAAX,OAAqBuE,EAAG,UAAMvE,EAAQ,EAAd,qBAA4BoF,EAAIV,IAAhC,6BAAwDU,EAAIqC,UAA5D,yBAAsFrC,EAAIsC,OAA1F,SAAuG,IAGlJ,OACE,yBAAKrH,UAAU,gBAEb,yBAAKA,UAAU,cAAa,0BAAOC,QAAS,SAAAC,GAAG,OAAEuI,GAAUA,EAAOvI,EAAKwI,KAAU,uBAAG1I,UAAU,kBAE9F,yBAAKA,UAAU,cACb,yCACA,yBAAKA,UAAU,kBACb,8CACA,uBAAGA,UAAU,aAAaN,EAAK2G,YAC/B,6CACA,uBAAGrG,UAAU,cAAcN,EAAKwH,WAAW,KAAMyB,QAAQ,GAAzD,SAKJ,yBAAK3I,UAAU,gBACb,6CACA,kDAAwBN,EAAKsH,QAAQ7G,KAArC,+CAAuFT,EAAKsH,QAAQ5G,UAApG,UAAsHV,EAAKsH,QAAQ3G,UAAnI,KACA,yBAAKL,UAAU,kBACb,0CACA,6CACA,6CACA,uBAAGA,UAAU,aAAaN,EAAKsH,QAAQ7G,MACvC,uBAAGH,UAAU,aAAaN,EAAKsH,QAAQ5G,WACvC,uBAAGJ,UAAU,aAAaN,EAAKsH,QAAQ3G,aAI3C,yBAAKL,UAAU,gBACb,6CAGEN,EAAKA,KAAKmH,KAAI,SAAC9B,EAAKpF,GAClB,OACE,yBAAKK,UAAU,iBAAiBqE,IAAK1E,GACnC,6CAAeoF,EAAIV,IAAnB,6BAA2CU,EAAIqC,UAA/C,yBAAyErC,EAAIsC,OAA7E,MACA,oCACA,wCACA,qCACA,uBAAGrH,UAAU,6BAA6B+E,EAAIV,KAC9C,uBAAGrE,UAAU,aAAa+E,EAAIqC,WAC9B,uBAAGpH,UAAU,aAAa+E,EAAIsC,gBCyC/BuB,G,MAhGyB,SAAC,GAAoB,IAAnBlJ,EAAkB,EAAlBA,KAAM+I,EAAY,EAAZA,OAExCC,EAAO,0BACEhJ,EAAKyG,mBAAoBwC,QAAQ,GADnC,yBAELjJ,EAAKmG,GAFA,cAEQnG,EAAKqG,OAFb,yBAGDrG,EAAK2G,WAHJ,8BAKE3G,EAAKsG,WALP,sCAK+CtG,EAAKwG,iBALpD,gDAMUxG,EAAK4G,iBAAiBjC,IANhC,6BAMwD3E,EAAK4G,iBAAiBc,UAN9E,yBAMwG1H,EAAK4G,iBAAiBe,OAN9H,sCAOW3H,EAAK+G,kBAAkBpC,IAPlC,6BAO0D3E,EAAK+G,kBAAkBW,UAPjF,yBAO2G1H,EAAK+G,kBAAkBY,OAPlI,+BAQI3H,EAAKgH,YAAYrC,IARrB,6BAQ6C3E,EAAKgH,YAAYU,UAR9D,yBAQwF1H,EAAKgH,YAAYW,OARzG,gCASK3H,EAAKiH,aAAatC,IATvB,6BAS+C3E,EAAKiH,aAAaS,UATjE,yBAS2F1H,EAAKiH,aAAaU,OAT7G,OAYb,OACE,yBAAKrH,UAAU,kBAEb,yBAAKA,UAAU,gBAAe,0BAAOC,QAAS,SAAAC,GAAG,OAAEuI,GAAUA,EAAOvI,EAAKwI,KAAU,uBAAG1I,UAAU,kBAEhG,yBAAKA,UAAU,gBACb,yCACA,yBAAKA,UAAU,kBACb,iCACA,uBAAGA,UAAU,aAAb,UAA6BN,EAAKmG,GAAGgD,OAAO,EAAG,IAA/C,iBAA2DnJ,EAAKqG,SAChE,mCACA,uBAAG/F,UAAU,aAAb,UAA6BN,EAAKoG,MAAlC,OAAyD,cAAhBpG,EAAKqG,OAAyB,MAAQ,KAC/E,wCACA,uBAAG/F,UAAU,aAAaN,EAAK2G,YAC/B,uCACA,uBAAGrG,UAAU,aAAcN,EAAKyG,mBAAoBwC,QAAQ,GAA5D,SAKJ,yBAAK3I,UAAU,gBACb,uCACA,yBAAKA,UAAU,kBACb,0CACA,uBAAGA,UAAU,aAAaN,EAAKsG,YAC/B,2CACA,uBAAGhG,UAAU,aAAaN,EAAKwG,mBAGjC,yBAAKlG,UAAU,kBACb,6DAA+BN,EAAK4G,iBAAiBjC,IAArD,6BAA6E3E,EAAK4G,iBAAiBc,UAAnG,yBAA6H1H,EAAK4G,iBAAiBe,OAAnJ,MACA,oCACA,wCACA,qCACA,uBAAGrH,UAAU,6BAA6BN,EAAK4G,iBAAiBjC,KAChE,uBAAGrE,UAAU,aAAaN,EAAK4G,iBAAiBc,WAChD,uBAAGpH,UAAU,aAAaN,EAAK4G,iBAAiBe,SAGlD,yBAAKrH,UAAU,kBACb,8DAAgCN,EAAK+G,kBAAkBpC,IAAvD,6BAA+E3E,EAAK+G,kBAAkBW,UAAtG,yBAAgI1H,EAAK+G,kBAAkBY,OAAvJ,MACA,oCACA,wCACA,qCACA,uBAAGrH,UAAU,6BAA6BN,EAAK+G,kBAAkBpC,KACjE,uBAAGrE,UAAU,aAAaN,EAAK+G,kBAAkBW,WACjD,uBAAGpH,UAAU,aAAaN,EAAK+G,kBAAkBY,SAGnD,yBAAKrH,UAAU,kBACb,uDAAyBN,EAAKgH,YAAYrC,IAA1C,6BAAkE3E,EAAKgH,YAAYU,UAAnF,yBAA6G1H,EAAKgH,YAAYW,OAA9H,MACA,oCACA,wCACA,qCACA,uBAAGrH,UAAU,6BAA6BN,EAAKgH,YAAYrC,KAC3D,uBAAGrE,UAAU,aAAaN,EAAKgH,YAAYU,WAC3C,uBAAGpH,UAAU,aAAaN,EAAKgH,YAAYW,SAG7C,yBAAKrH,UAAU,kBACb,wDAA0BN,EAAKiH,aAAatC,IAA5C,6BAAoE3E,EAAKiH,aAAaS,UAAtF,yBAAgH1H,EAAKiH,aAAaU,OAAlI,MACA,oCACA,wCACA,qCACA,uBAAGrH,UAAU,6BAA6BN,EAAKiH,aAAatC,KAC5D,uBAAGrE,UAAU,aAAaN,EAAKiH,aAAaS,WAC5C,uBAAGpH,UAAU,aAAaN,EAAKiH,aAAaU,aC0GvCyB,MA1Lf,WAEE,IAAIC,EAAKjI,iBAA4B,MACrB,OAAfiI,EAAGhI,UAAsBgI,EAAGhI,QAAU,IAAI0G,GAC3CjD,QAAQC,IAAI,mCAAoCsE,EAAGhI,QAAQiI,cAJ9C,MAM6BtI,oBAAkB,GAN/C,mBAMNuI,EANM,KAMSC,EANT,OAO+BxI,oBAAkB,GAPjD,mBAONyI,EAPM,KAOUC,EAPV,OAQiC1I,oBAAkB,GARnD,mBAQN2I,EARM,KAQWC,EARX,OASmC5I,oBAAkB,GATrD,mBASN6I,EATM,KASYC,EATZ,OAUuB9I,oBAAkB,GAVzC,mBAUN+I,EAVM,KAUMC,EAVN,OAWyChJ,oBAAkB,GAX3D,mBAWNiJ,EAXM,KAWeC,EAXf,OAYuBlJ,oBAAkB,GAZzC,mBAYNZ,EAZM,KAYM+J,EAZN,OAa6BnJ,mBAAiB,IAb9C,mBAaNoJ,EAbM,KAaSC,EAbT,OAcmBrJ,mBAAiB,IAdpC,mBAcNsJ,EAdM,KAcIC,EAdJ,OAeiBvJ,mBAAyB,IAf1C,mBAeNwJ,EAfM,KAeGC,GAfH,QAgB+BzJ,qBAhB/B,qBAgBN0J,GAhBM,MAgBUC,GAhBV,MAgDPC,GAAmB,WAEvBpB,GAAiB,GAEjBlI,YAAW,WACToI,GAAkB,GAClBE,GAAmB,GACnBE,GAAoB,GACpBI,GAAwB,KACvB,MAGCW,GAAoB,uCAAG,8BAAAhC,EAAA,6DAE3BvH,YAAW,WACT0I,GAAc,GACdG,GAAc,GACdI,EAAY,2DACX,GANwB,mBAQTlB,EAAGhI,eARM,aAQT,EAAYyJ,YAAY,CAACC,KAAMX,EAAeI,QAASA,IAAU,eARxD,OAQrBnF,EARqB,OAS3BsF,GAAkBtF,GAGlB/D,YAAW,WACT0I,GAAc,GACdG,GAAc,GACdI,EAAY,yCACX,GAEHjJ,YAAW,WACTiJ,EAAY,MACX,KApBwB,2CAAH,qDAsBpBS,GAAa,SAACxK,EAAUyK,GAC5BzK,EAAIwB,iBACJ8C,QAAQC,IAAI,YAAakG,GACzBC,UAAUC,UAAUC,UAAUH,IAGhC,OADAnG,QAAQuG,KAAK,yBAA0BX,IAErC,0BAAMpK,UAAU,OACd,6BAASA,UAAU,iBAEjB,6BAASA,UAAU,iBACjB,yBAAKA,UAAU,kBACb,0BAAMA,UAAU,kBAAkBC,QAAS,SAAAC,GAAG,OAzDtDiK,GAAW,IACXf,GAAkB,GAClBE,GAAmB,GACnBE,GAAoB,GACpBI,GAAwB,GACxBV,GAAiB,GACjBa,EAAiB,IACjBL,GAAc,GACdG,GAAc,QACdI,EAAY,MAgDyD,uBAAGjK,UAAU,sBACzEF,GAAe,0BAAME,UAAU,cAAcC,QAAS,SAAAC,GAAG,OAlElEsJ,GAAoB,QAEpBN,GAAiB,KAgEgF,uBAAGlJ,UAAU,iBAGxG,8BAAUJ,SAAU,SAACM,GAAD,OAAO6J,EAAiB7J,EAAI0B,OAAOP,QAC7CG,YAAY,gDAEZH,MAAOyI,IAGjB,yBAAK9J,UAAS,sBAAiByJ,EAAa,uBAAyB,MAErE,yBAAKzJ,UAAU,YACZgK,GAAa,2BAAIA,KAOtB,6BAAShK,UAAU,gBAEfkK,GACEA,EAAQrD,KAAI,SAACmE,EAAOrL,GAAR,OAAkB,kBAAC,EAAD,CAAOD,KAAMsL,EAAO3G,IAAK1E,EAAOG,WAAYA,EAAYH,MAAOA,EAAM,EAAGC,SAAU,kBAnGnGqL,EAmGuHtL,EAlG9IyJ,GAAkB,GAClBQ,EAAuBqB,QACvB/B,GAAiB,GAHK,IAAC+B,GAmG+HpL,OAAQ,kBA9FvIoL,EA8F2JtL,EA7FlL2J,GAAmB,GACnBM,EAAuBqB,QACvB/B,GAAiB,GAHK,IAAC+B,GA8FmKlL,SAAU,kBApF1KkL,EAoFiMtL,OAnF3NwK,IAAW,SAAAe,GAAE,OAAIA,EAAGC,QAAO,SAACC,EAAGzL,GAAJ,OAAcA,IAAUsL,QAD1B,IAACA,QAuFpB,yBAAKjL,UAAU,YACVC,QAAS,SAAAC,GAAG,OAAEiK,IAAW,SAAAD,GAAO,4BAAOA,GAAP,CAAgB,CAAC9J,UAAW,EAAEC,UAAW,GAAGF,KAAM,WACrF,uBAAGH,UAAU,gBACb,8CASJ,6BAASA,UAAU,sBACjB,4BAAQA,UAAU,eAAeC,QAAS,SAAAC,GAAG,OAAIqK,OAAjD,oBAUF,6BAASvK,UAAS,0BAAqBqJ,GAAmBE,EAAmB,4BAA8B,KACzG,kBAAC,EAAD,CAAO9I,SAAUwI,EAAezI,aAAc,kBAAI8J,OAChD,kBAAC,EAAD,CAAMnJ,QAAS,kBAAImJ,OAEfnB,GACE,kBAAC,EAAD,CAAczJ,KAAMwK,EAAQP,GAChB/J,SAAU,SAAAF,GAAI,OAAIyK,IAAW,SAAAe,GAM3B,OALAlK,YAAW,WACToI,GAAkB,KACjB,KAEHF,GAAiB,GACVgC,EAAGrE,KAAI,SAACuE,EAAGzL,GAEhB,OADCA,IAAUgK,IAAyByB,EAAC,eAAO1L,IACrC0L,WAOzB/B,GAAmBe,IACjB,kBAAC,EAAD,CAAa1K,KAAI,OAAE0K,SAAF,IAAEA,QAAF,EAAEA,GAAgBxD,QAAQ+C,GAAsBlB,OAAQ,SAACvI,EAAKyK,GAAN,OAAaD,GAAWxK,EAAKyK,MAKxGpB,GAAoBa,IAClB,kBAAC,EAAD,CAAe1K,KAAM0K,GAAgB3B,OAAQ,SAACvI,EAAKyK,GAAN,OAAaD,GAAWxK,EAAKyK,YC5KxEU,QACW,cAA7BvD,OAAOC,SAASuD,UAEe,UAA7BxD,OAAOC,SAASuD,UAEhBxD,OAAOC,SAASuD,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDqI3C,kBAAmBf,WACrBA,UAAUgB,cAAcC,MACrB/G,MAAK,SAAAgH,GACJA,EAAaC,gBAEd9G,OAAM,SAAA+G,GACLxH,QAAQwH,MAAMA,EAAMC,c","file":"static/js/main.7db0237b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nimport './QueryEditor.css';\r\nimport { TUIQueryItem } from '../../data.controller/data.types';\r\nimport { CustomInputNumberUndefined } from '../CustomInput/CustomInput';\r\n\r\n\r\n\r\nenum TUIQueryItemEnum{\r\n  TOPN = 0,\r\n  MIN,\r\n  MAX\r\n}\r\ntype TProps = {\r\n  data: TUIQueryItem,\r\n  onChange: (updatedData: TUIQueryItem)=>void\r\n}\r\nconst QueryEditor: React.FC<TProps> = ({data, onChange}) => {\r\n\r\n  const [localData, _setLocalData] = useState<TUIQueryItem>(data)\r\n  const setLocalData = (val: string, field: TUIQueryItemEnum)=>{\r\n    let tmp: TUIQueryItem = localData;\r\n    (field === TUIQueryItemEnum.TOPN) && (tmp.topN = parseFloat(val));\r\n    (field === TUIQueryItemEnum.MIN) && (tmp.minLength = parseFloat(val));\r\n    (field === TUIQueryItemEnum.MAX) && (tmp.maxLength = parseFloat(val));\r\n    _setLocalData({...tmp});\r\n  }\r\n  return (\r\n              <div className=\"query-editor\">\r\n\r\n                <div className=\"query-item\">\r\n                  <div className={\"supporting-text\"}>Enter minimum length of tokens of interest</div>\r\n                  <CustomInputNumberUndefined value={localData.topN} handleChange={(val)=>setLocalData(val, TUIQueryItemEnum.TOPN)} />\r\n                </div>\r\n                \r\n                <div className=\"query-item\">\r\n                  <div className={\"supporting-text\"}>Enter minimum length of tokens of interest</div>\r\n                  <CustomInputNumberUndefined value={localData.minLength} handleChange={(val)=>setLocalData(val, TUIQueryItemEnum.MIN)} />\r\n                </div>\r\n\r\n                <div className=\"query-item\">\r\n                  <div className={\"supporting-text\"}>Enter maximum length of tokens of interest</div>\r\n                  <CustomInputNumberUndefined value={localData.maxLength} handleChange={(val)=>setLocalData(val, TUIQueryItemEnum.MAX)} />\r\n                </div>\r\n\r\n                <div className=\"query-item\">\r\n                  <button className=\"btn btn-main\" onClick={()=>onChange({...localData})}>Save Query</button>\r\n                </div>\r\n              </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default QueryEditor;\r\n","import React from 'react';\r\n\r\n\r\nimport './Query.css';\r\nimport { TUIQueryItem } from '../../data.controller/data.types';\r\n\r\n\r\n\r\ntype TProps = {\r\n  data: TUIQueryItem,\r\n  index: number,\r\n  hasResults: boolean,\r\n  onChange: ()=>void\r\n  onRemove: ()=>void\r\n  onView: ()=>void\r\n}\r\nconst Query: React.FC<TProps> = ({data, index, onChange, onView, hasResults, onRemove}) => {\r\n\r\n\r\n  return (\r\n    <div className=\"query-container\">\r\n\r\n      <div className=\"query-header\">\r\n        <p className=\"query-index\">Query&nbsp;{index}</p>\r\n        <span className=\"query-icons\">\r\n          {\r\n            hasResults && (\r\n              <span className=\"query-result\" onClick={evt=>onView()}>\r\n                <i className=\"fas fa-eye\"></i>\r\n              </span>\r\n            )\r\n          }\r\n          <span className=\"query-edit\" onClick={evt=>onRemove()}><i className=\"fas fa-minus\"></i></span>\r\n          <span className=\"query-remove\" onClick={evt=>onChange()}><i className=\"fas fa-pencil-alt\"></i></span>\r\n          \r\n        </span>\r\n      </div>\r\n\r\n      <p className=\"query-text\">\r\n        {\r\n          `Retrieve top ${data.topN} most frequent tokens from text with length between ${data.minLength} and ${data.maxLength}`\r\n        }\r\n      </p>\r\n      \r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default Query;\r\n","import React, { useState, useRef } from 'react';\r\n\r\n\r\nimport './Modal.css';\r\n\r\n\r\n\r\ntype TProps = {\r\n  isActive: boolean\r\n  onDeactivate: ()=>void\r\n}\r\nconst Modal: React.FC<TProps> = ({children, onDeactivate,isActive}) => {\r\n\r\n  const [isChildVisible, setIsChildVisible] = useState<boolean>(false)\r\n  let isChildActivated = useRef<boolean>(false)  \r\n  if(isActive && !isChildActivated.current && !isChildVisible){\r\n    isChildActivated.current = true\r\n    setTimeout(()=>{\r\n      setIsChildVisible(true)\r\n    }, 300)     \r\n  }\r\n\r\n\r\n  return (\r\n    <div className={`modal-container ${isActive?'modal-container--active':''}`}\r\n          onClick={evt => {\r\n            isChildActivated.current = false\r\n            onDeactivate()\r\n            setIsChildVisible(false)\r\n            evt.stopPropagation()\r\n          }}\r\n    >\r\n      <div className={`modal-children-container ${isChildVisible?'modal-children--visible':''}`} onClick={evt => evt.stopPropagation()}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport './Page.css';\r\n\r\n\r\n\r\ntype TProps = {\r\n  onClose: ()=>void\r\n}\r\nconst Page: React.FC<TProps> = ({children, onClose}) => {\r\n\r\n  return (\r\n    <div className=\"page-component\">\r\n      <div className=\"page-content\">\r\n        {children}\r\n      </div>\r\n      <div className=\"close-page\" onClick={evt=>onClose()}><span><i className=\"fas fa-times-circle\"></i></span></div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Page","import React, { useState } from 'react';\r\nimport './CustomInput.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    value: string,\r\n    handleChange: (newValue: string)=>void,\r\n    extraClasses?: string,\r\n    disabled?: boolean,\r\n    placeholder?: string\r\n}\r\ntype PropsNumber = {\r\n    value: number,\r\n    handleChange: (newValue: string)=>void,\r\n    extraClasses?: string,\r\n    placeholder?: string,\r\n    min?: number,\r\n    max?: number,\r\n    disabled?: boolean,\r\n    step?: number,\r\n}\r\n  \r\n  \r\nconst CustomInputText: React.FC<Props> = ({value, handleChange, extraClasses, placeholder, disabled}) => {\r\n    return (\r\n        <div className={`custom-input align-self-stretch flex flex-column ${extraClasses} ${disabled ? 'custom-input--disabled': ''}`}>\r\n            <div className='disabling-overlay' onClick={evt => {evt.stopPropagation(); evt.preventDefault()}}></div>\r\n            <input type=\"text\" value={value} onChange={evt=>handleChange(evt.target.value)} placeholder={placeholder}/>\r\n            <span className=\"pen-icon flex-centered\"><i className=\"fas fa-pen\"></i></span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CustomInputNumber: React.FC<PropsNumber> = ({value, handleChange, extraClasses, placeholder, disabled, min, max, step}) => {\r\n    return (\r\n        <div className={`custom-input align-self-stretch flex flex-column ${extraClasses} ${disabled ? 'custom-input--disabled': ''}`}>\r\n            <div className='disabling-overlay' onClick={evt => {evt.stopPropagation(); evt.preventDefault()}}></div>\r\n            <input type=\"number\" value={value} onChange={evt=>handleChange(evt.target.value)} min={min} max={max} step={step} placeholder={placeholder}/>\r\n            <span className=\"pen-icon flex-centered\"><i className=\"fas fa-pen\"></i></span>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst CustomInputNumberUndefined: React.FC<PropsNumber> = ({value, handleChange, extraClasses, placeholder, disabled, min, max, step}) => {\r\n    // This component will allow the input field to remain empty while the user is typing.\r\n    // It is therefore agnostic of the empty/undefined/null value policy of the higher compoennt/source of truth\r\n    // While the field is empty the last value from the source of truth is cached.\r\n    // This only works under the assumption that the value can only change from this field, and that the source of\r\n    // truth does not in anyway coerce/update/cahnge this value\r\n\r\n    // To allow the field to remain empty while the user is typing\r\n    // Give the illusion to the source of truth (higher component) that the value never becomes empty:\r\n    // When it actually does, cache the current value received from props and send that to the source of truth\r\n    // on subsequent re-renders until the user enters a non null value\r\n    // thus allowing the input field to remain empty, and prevent it to be coerced to some value by a source\r\n    // of truth that does not like empty fields...\r\n    const willPotentiallyCacheThis: string = value.toString() \r\n    const [cachedValue, setCachedValue] = useState<string|undefined>()\r\n    \r\n    return (\r\n        <div className={`custom-input align-self-stretch flex flex-column ${extraClasses} ${disabled ? 'custom-input--disabled': ''}`}>\r\n            <div className='disabling-overlay' onClick={evt => {evt.stopPropagation(); evt.preventDefault()}}></div>\r\n            <input type=\"number\" value={cachedValue ? '' : value} onChange={evt=>{\r\n                    if(!evt.target.value){\r\n                        setCachedValue(willPotentiallyCacheThis);\r\n                        handleChange(willPotentiallyCacheThis);\r\n                    }else{\r\n                        setCachedValue(undefined)\r\n                        handleChange(evt.target.value);\r\n                    }\r\n                }} min={min} max={max} step={step} placeholder={placeholder}/>\r\n            <span className=\"pen-icon flex-centered\"><i className=\"fas fa-pen\"></i></span>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst CustomInputTextPassword: React.FC<Props> = ({value, handleChange, extraClasses, placeholder, disabled}) => {\r\n    return (\r\n        <div className={`custom-input align-self-stretch flex flex-column ${extraClasses} ${disabled ? 'custom-input--disabled': ''}`}>\r\n            <div className='disabling-overlay' onClick={evt => {evt.stopPropagation(); evt.preventDefault()}}></div>\r\n            <input type=\"password\" value={value} onChange={evt=>handleChange(evt.target.value)} placeholder={placeholder}/>\r\n            <span className=\"pen-icon flex-centered\"><i className=\"fas fa-pen\"></i></span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CustomInputNumberPassword: React.FC<Props> = ({value, handleChange, extraClasses, placeholder, disabled}) => {\r\n    return (\r\n        <div className={`custom-input align-self-stretch flex flex-column ${extraClasses} ${disabled ? 'custom-input--disabled': ''}`}>\r\n            <div className='disabling-overlay' onClick={evt => {evt.stopPropagation(); evt.preventDefault()}}></div>\r\n            <input type=\"password\" pattern=\"[0-9]*\" value={value === 'NaN' ? '' : value} onChange={evt=>handleChange(evt.target.value)} placeholder={placeholder}/>\r\n            <span className=\"pen-icon flex-centered\"><i className=\"fas fa-pen\"></i></span>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n  \r\nCustomInputText.defaultProps = {\r\n    value: '',\r\n    extraClasses: '',\r\n    placeholder: 'Your Input Here',\r\n    disabled: false\r\n}\r\nCustomInputNumber.defaultProps = {\r\n    value: 0,\r\n    extraClasses: '',\r\n    placeholder: 'Your Input Here',\r\n    min: -1*Number.MAX_SAFE_INTEGER,\r\n    max: Number.MAX_SAFE_INTEGER,\r\n    step: 1,\r\n    disabled: false\r\n}\r\nCustomInputTextPassword.defaultProps = {...CustomInputText.defaultProps}\r\nCustomInputNumberPassword.defaultProps = {...CustomInputText.defaultProps}\r\nexport { CustomInputText, CustomInputNumber, CustomInputTextPassword, CustomInputNumberPassword, CustomInputNumberUndefined };","\r\nconst httpRequest = (\r\n                      _url: string, \r\n                      parameters?: {[key: string]:any},\r\n                      method: string = \"GET\",\r\n                      headers?: {[key:string]: string}) => {\r\n\r\n  \r\n  let _header = {'content-type': 'application/json'}\r\n  let url: string = _url;\r\n\r\n\r\n\r\n  \r\n\r\n  // Build generic options for fetch api\r\n  let options: any = {\r\n    method: method,\r\n    headers: {..._header, ...headers},\r\n    // mode: 'no-cors'\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // Process Parameters/body\r\n  if(parameters){\r\n    switch(method.toLowerCase()){\r\n      case 'get':\r\n        \r\n        // Build Request parameters in url \r\n        // Filter parameters to get non empty items on object\r\n        const keys = Object.keys(parameters)\r\n        const validParams = Object.values(parameters)\r\n                                  .reduce((acc, item, index) => {\r\n                                      item && (acc[keys[index]] = item);\r\n                                      return acc;\r\n                                    }\r\n                                  , {})\r\n        // If parameters are not empty, append to url\r\n        if(Object.values(validParams).join(\"\")){\r\n          url = url + Object.keys(validParams).reduce((acc, key, index) => `${acc}${index===0?'?':'&'}${key}=${validParams[key]}`, '')\r\n        }\r\n                                  \r\n        break;\r\n      default:\r\n        // By default parameters will become the json body of the request\r\n        options[\"body\"] = JSON.stringify(parameters)\r\n        break\r\n    }\r\n  }\r\n\r\n  console.log(`[fetch] Fetching at '${url}' with options '${JSON.stringify(options)}'`)\r\n\r\n\r\n\r\n\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url, options)\r\n    // fakeFetch(url, options)\r\n    .then(res => res.json())\r\n    .then(data=>resolve(data))\r\n    .catch(err => reject(err));\r\n  })\r\n\r\n  \r\n}\r\n\r\n\r\nexport default httpRequest;\r\n","\r\nexport type TBookSummary = {\r\n  id: string,\r\n  meta: string,\r\n  idType: string,\r\n  wordsCount: number,\r\n  uniqueWordsCount: number,\r\n  mostFrequentWord: TTokenSummary,\r\n  leastFrequentWord: TTokenSummary,\r\n  longestWord: TTokenSummary,\r\n  shortestWord: TTokenSummary,\r\n  summaryDurationSec: number,\r\n  createdAt: number,\r\n  _createdAt: string,\r\n  results: TQuerySummary[]\r\n}\r\n\r\n\r\nexport type TTokenSummary = {\r\n  key: string,\r\n  frequency: number,\r\n  length: number\r\n}\r\n\r\nexport type TQuerySummary = {\r\n  uiQuery: TUIQueryItem\r\n  createdAt: number\r\n  _createdAt: string\r\n  durationMs: number\r\n  data: TTokenSummary[]\r\n}\r\n\r\n\r\n\r\nexport type TUIQueryItem = {\r\n  minLength: number,\r\n  maxLength: number,\r\n  topN: number\r\n}\r\n\r\nexport type TUIQuery = {\r\n  book: string,\r\n  queries: TUIQueryItem[]\r\n}\r\n\r\nexport type TTypeConverter = {\r\n  toBookSummary: (bookObj: any) => TBookSummary,\r\n  toTokenSummary: (tokenObj: any) => TTokenSummary,\r\n  toQuerySummary: (resObj: any) => TQuerySummary,\r\n  toUIQueryItem: (minTokenLength: number, maxTokenLength: number, topNCount: number) => TUIQueryItem\r\n}\r\n\r\n\r\nconst timestampToLocaleString = (ts: number)=>new Date(new Date(ts).getTime() - new Date().getTimezoneOffset() * 60000).toISOString().replace(/.[0-9]+Z$/,'').replace('T',' ')\r\nconst typeConverter: TTypeConverter = {\r\n  toBookSummary(bookObj: any): TBookSummary{\r\n    return {\r\n      id: bookObj[\"id\"] ? bookObj[\"id\"] : \"\",\r\n      meta: bookObj[\"meta\"] ? bookObj[\"meta\"] : \"\",\r\n      idType: bookObj[\"idType\"] ? bookObj[\"idType\"] : \"\",\r\n\r\n      wordsCount: bookObj[\"wordsCount\"] || bookObj[\"wordsCount\"] === 0 ? bookObj[\"wordsCount\"] : NaN,\r\n      uniqueWordsCount: bookObj[\"uniqueWordsCount\"] || bookObj[\"uniqueWordsCount\"] === 0  ? bookObj[\"uniqueWordsCount\"] : NaN,\r\n      summaryDurationSec: bookObj[\"summaryDurationSec\"] || bookObj[\"summaryDurationSec\"] === 0  ? bookObj[\"summaryDurationSec\"] : NaN,\r\n      createdAt: bookObj[\"createdAt\"] ? bookObj[\"createdAt\"] : 0,\r\n      _createdAt: bookObj[\"createdAt\"] ? timestampToLocaleString(bookObj[\"createdAt\"]) : \"Invalid Date\",\r\n\r\n      mostFrequentWord: this.toTokenSummary(bookObj[\"mostFrequentWord\"]),\r\n      leastFrequentWord: this.toTokenSummary(bookObj[\"leastFrequentWord\"]),\r\n      longestWord: this.toTokenSummary(bookObj[\"longestWord\"]),\r\n      shortestWord: this.toTokenSummary(bookObj[\"shortestWord\"]),\r\n      \r\n      results: bookObj[\"results\"] ? bookObj[\"results\"].map((res: any) => this.toQuerySummary(res)) : []\r\n    }\r\n  },\r\n\r\n\r\n\r\n  toQuerySummary(resObj: any): TQuerySummary {\r\n      return {\r\n        uiQuery: this.toUIQueryItem(resObj[\"minTokenLength\"], resObj[\"maxTokenLength\"], resObj[\"topNCount\"]),\r\n        createdAt: resObj[\"createdAt\"] ? resObj[\"createdAt\"] : 0,\r\n        _createdAt: resObj[\"createdAt\"] ? timestampToLocaleString(resObj[\"createdAt\"]) : \"Invalid Date\",\r\n        durationMs: resObj[\"durationMs\"] || resObj[\"durationMs\"] === 0 ? resObj[\"durationMs\"] : NaN,\r\n        data: resObj[\"data\"] ? resObj[\"data\"].map((item: any) => this.toTokenSummary(item)) : []\r\n      }\r\n  },\r\n\r\n\r\n  toTokenSummary(tokenObj: any): TTokenSummary {\r\n      return {\r\n        key: tokenObj[\"key\"] ? tokenObj[\"key\"] : \"\",\r\n        frequency: tokenObj[\"frequency\"] || tokenObj[\"frequency\"] === 0 ? tokenObj[\"frequency\"] : NaN,\r\n        length: tokenObj[\"length\"] || tokenObj[\"length\"] === 0 ? tokenObj[\"length\"] : NaN,\r\n      }\r\n  },\r\n\r\n\r\n  toUIQueryItem(minTokenLength: number, maxTokenLength: number, topNCount: number): TUIQueryItem {\r\n      return {\r\n        minLength: minTokenLength || minTokenLength === 0 ? minTokenLength : NaN,\r\n        maxLength: maxTokenLength || maxTokenLength === 0  ? maxTokenLength : NaN,\r\n        topN: topNCount || topNCount === 0  ? topNCount : NaN,\r\n      }\r\n  }\r\n}\r\n\r\nexport {typeConverter};\r\n","import httpRequest from \"./utils/data.fetch\";\r\nimport { TUIQuery, TBookSummary, typeConverter } from \"./data.types\";\r\n\r\n\r\n\r\n\r\n\r\nexport default class DataController {\r\n  // private urlBaseDevelopment: string = \"https://localhost:5051/\";\r\n  private urlBaseDevelopment: string = \"http://localhost:5050/\";\r\n  // private urlBaseProduction: string = \"https://corpus-inventory.herokuapp.com/\";\r\n  // private urlBaseProduction: string = `${window.location.origin}/`; //Prevent the cors error between http and https\r\n  private urlBase: string = \"\";\r\n  private urlGetAllBooks: string = \"api/corpusinventory\";\r\n  // private urlGetABook: string = \"api/corpusinventory/{id}\";\r\n  private urlProcessABook: string = \"api/corpusinventory\";\r\n\r\n  // private setUiData: Function\r\n  // private timerID: any\r\n  // private dataRefreshRateSec: number = 15;\r\n  getVersion(){\r\n    return '1.0'\r\n  }\r\n  // constructor(setUiData: Function){\r\n  constructor(){\r\n    // Determine whether we shoudl use dev urls or production urls at heroku\r\n    // if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    //   console.warn(\"[DC]: App is in Development Mode\");\r\n    //   this.urlBase = this.urlBaseDevelopment;\r\n    // } else {\r\n    //   console.warn(\"[DC]: App is in Production Mode\");\r\n    //   this.urlBase = this.urlBaseProduction;\r\n    // }\r\n    // this.urlBase = this.urlBaseDevelopment;\r\n    // this.urlBase = this.urlBaseProduction;\r\n    this.urlBase = `${window.location.origin}/`;\r\n    if(this.urlBase.indexOf(\"localhost\") !== -1){\r\n      this.urlBase = this.urlBaseDevelopment\r\n    }\r\n    // this.setUiData = setUiData\r\n\r\n    // const _this = this\r\n    // this.timerID = setInterval(()=>{\r\n    //   _this.getBooks()\r\n    // }, this.dataRefreshRateSec)\r\n\r\n  }\r\n  \r\n  \r\n\r\n\r\n  // Makes sure we are talking to right backend\r\n  buildURL(url: string){\r\n    return `${this.urlBase}${url}`\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  async getBooks(): Promise<TBookSummary[]>{\r\n    let rawBooks = await httpRequest(this.buildURL(this.urlGetAllBooks));\r\n    return (rawBooks as any[]).map((rawBook: any) => typeConverter.toBookSummary(rawBook))\r\n  }\r\n  async getBookById(bookId: string): Promise<TBookSummary|null>{\r\n    let rawBook = await httpRequest(`${this.buildURL(this.urlGetAllBooks)}/${bookId}`);\r\n    return typeConverter.toBookSummary(rawBook);\r\n  }\r\n  processBook(uiQuery: TUIQuery, cb: Function): Promise<TBookSummary>{\r\n    return new Promise(async (resolve, reject) => {\r\n      await httpRequest(`${this.buildURL(this.urlProcessABook)}`, uiQuery, \"POST\")\r\n      .then((res)=>{\r\n        console.log(res)\r\n        cb();\r\n        resolve(typeConverter.toBookSummary(res));\r\n      })\r\n      .catch((err)=>{\r\n        reject(err);\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n}","import React from 'react';\r\n\r\n\r\nimport './QueryViewer.css';\r\nimport {  TQuerySummary } from '../../data.controller/data.types';\r\n\r\n\r\n\r\n\r\ntype TProps = {\r\n  data: TQuerySummary,\r\n  onCopy: (evt: any, summary: string)=>void\r\n}\r\nconst QueryViewer: React.FC<TProps> = ({data, onCopy}) => {\r\n\r\n\r\n  const summary = `\r\nQuery Summary (${(data.durationMs/1000).toFixed(2)}sec)\r\nCreated at: ${data._createdAt}\r\nExecution Time: ${(data.durationMs/1000).toFixed(2)}sec\r\nQuery Definition: Searching for top '${data.uiQuery.topN}' most frequent tokens with length between '${data.uiQuery.minLength}' and '${data.uiQuery.maxLength}'\r\n\r\nQuery Results:\r\n` + data.data.reduce((acc, res, index) => acc + `${index + 1} - Found '${res.key}' with frequency '${res.frequency}' and length '${res.length}'\\n`, \"\");\r\n\r\n\r\n  return (\r\n    <div className=\"query-viewer\">\r\n\r\n      <div className=\"query-copy\"><span  onClick={evt=>onCopy && onCopy(evt, summary)}><i className=\"fas fa-copy\"></i></span></div>\r\n\r\n      <div className=\"query-meta\">\r\n        <h1>Meta Data</h1>\r\n        <div className=\"data-container\">\r\n          <p>Query Timestamp</p>\r\n          <p className=\"data-item\">{data._createdAt}</p>\r\n          <p>Query Duration</p>\r\n          <p className=\"data-item\">{(data.durationMs/1000).toFixed(2)}sec</p>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"query-object\">\r\n        <h1>Query Summary</h1>\r\n        <h3>Searching for top '{data.uiQuery.topN}' most frequent tokens with length between '{data.uiQuery.minLength}' and '{data.uiQuery.maxLength}'</h3>\r\n        <div className=\"data-container\">\r\n          <p>Token Count</p>\r\n          <p>Minimum Length</p>\r\n          <p>Maximum Length</p>\r\n          <p className=\"data-item\">{data.uiQuery.topN}</p>\r\n          <p className=\"data-item\">{data.uiQuery.minLength}</p>\r\n          <p className=\"data-item\">{data.uiQuery.maxLength}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"query-result\">\r\n        <h1>Query Results</h1>\r\n\r\n        {\r\n          data.data.map((res, index) => {\r\n            return (\r\n              <div className=\"data-container\" key={index}>\r\n                <h3>{`Found '${res.key}' with frequency '${res.frequency}' and length '${res.length}'`}</h3>\r\n                <p>Token</p>\r\n                <p>Frequency</p>\r\n                <p>Length</p>\r\n                <p className=\"data-item data-item-token\">{res.key}</p>\r\n                <p className=\"data-item\">{res.frequency}</p>\r\n                <p className=\"data-item\">{res.length}</p>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default QueryViewer;\r\n","import React from 'react';\r\n\r\n\r\nimport './SummaryViewer.css';\r\nimport {  TBookSummary } from '../../data.controller/data.types';\r\n\r\n\r\n\r\n\r\ntype TProps = {\r\n  data: TBookSummary,\r\n  onCopy: (evt: any, summary: string)=>void,\r\n}\r\nconst SummaryViewer: React.FC<TProps> = ({data, onCopy}) => {\r\n\r\n  const summary = `\r\nBook Summary (${(data.summaryDurationSec).toFixed(2)}sec)\r\nBookID: ${data.id} - ${data.idType}\r\nCreated at: ${data._createdAt}\r\n\r\nBook Contains '${data.wordsCount}' words in total of which '${data.uniqueWordsCount}' are unique\r\nMost Frequent word is '${data.mostFrequentWord.key}' with frequency '${data.mostFrequentWord.frequency}' and length '${data.mostFrequentWord.length}'\r\nLeast Frequent word is '${data.leastFrequentWord.key}' with frequency '${data.leastFrequentWord.frequency}' and length '${data.leastFrequentWord.length}'\r\nLongest word is '${data.longestWord.key}' with frequency '${data.longestWord.frequency}' and length '${data.longestWord.length}'\r\nShortest word is '${data.shortestWord.key}' with frequency '${data.shortestWord.frequency}' and length '${data.shortestWord.length}'\r\n`;\r\n\r\n  return (\r\n    <div className=\"summary-viewer\">\r\n\r\n      <div className=\"summary-copy\"><span  onClick={evt=>onCopy && onCopy(evt, summary)}><i className=\"fas fa-copy\"></i></span></div>\r\n\r\n      <div className=\"summary-meta\">\r\n        <h1>Meta Data</h1>\r\n        <div className=\"data-container\">\r\n          <p>ID</p>\r\n          <p className=\"data-item\">{`${data.id.substr(0, 20)}... - ${data.idType}`}</p>\r\n          <p>Info</p>\r\n          <p className=\"data-item\">{`${data.meta}${data.idType === 'book-hash' ? '...' : ''}`}</p>\r\n          <p>Timestamp</p>\r\n          <p className=\"data-item\">{data._createdAt}</p>\r\n          <p>Duration</p>\r\n          <p className=\"data-item\">{(data.summaryDurationSec).toFixed(2)}sec</p>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"summary-data\">\r\n        <h1>Summary</h1>\r\n        <div className=\"data-container\">\r\n          <p>Words Count</p>\r\n          <p className=\"data-item\">{data.wordsCount}</p>\r\n          <p>Unique Words</p>\r\n          <p className=\"data-item\">{data.uniqueWordsCount}</p>\r\n        </div>\r\n\r\n        <div className=\"data-container\">\r\n          <h3>{`Most Frequent word is '${data.mostFrequentWord.key}' with frequency '${data.mostFrequentWord.frequency}' and length '${data.mostFrequentWord.length}'`}</h3>\r\n          <p>Token</p>\r\n          <p>Frequency</p>\r\n          <p>Length</p>\r\n          <p className=\"data-item data-item-token\">{data.mostFrequentWord.key}</p>\r\n          <p className=\"data-item\">{data.mostFrequentWord.frequency}</p>\r\n          <p className=\"data-item\">{data.mostFrequentWord.length}</p>\r\n        </div>\r\n        \r\n        <div className=\"data-container\">\r\n          <h3>{`Least Frequent word is '${data.leastFrequentWord.key}' with frequency '${data.leastFrequentWord.frequency}' and length '${data.leastFrequentWord.length}'`}</h3>\r\n          <p>Token</p>\r\n          <p>Frequency</p>\r\n          <p>Length</p>\r\n          <p className=\"data-item data-item-token\">{data.leastFrequentWord.key}</p>\r\n          <p className=\"data-item\">{data.leastFrequentWord.frequency}</p>\r\n          <p className=\"data-item\">{data.leastFrequentWord.length}</p>\r\n        </div>\r\n\r\n        <div className=\"data-container\">\r\n          <h3>{`Longest word is '${data.longestWord.key}' with frequency '${data.longestWord.frequency}' and length '${data.longestWord.length}'`}</h3>\r\n          <p>Token</p>\r\n          <p>Frequency</p>\r\n          <p>Length</p>\r\n          <p className=\"data-item data-item-token\">{data.longestWord.key}</p>\r\n          <p className=\"data-item\">{data.longestWord.frequency}</p>\r\n          <p className=\"data-item\">{data.longestWord.length}</p>\r\n        </div>\r\n        \r\n        <div className=\"data-container\">\r\n          <h3>{`Shortest word is '${data.shortestWord.key}' with frequency '${data.shortestWord.frequency}' and length '${data.shortestWord.length}'`}</h3>\r\n          <p>Token</p>\r\n          <p>Frequency</p>\r\n          <p>Length</p>\r\n          <p className=\"data-item data-item-token\">{data.shortestWord.key}</p>\r\n          <p className=\"data-item\">{data.shortestWord.frequency}</p>\r\n          <p className=\"data-item\">{data.shortestWord.length}</p>\r\n        </div>\r\n\r\n              \r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default SummaryViewer;\r\n","import React, { useState, useRef } from 'react';\r\nimport './App.css';\r\nimport { TUIQueryItem, TBookSummary } from './data.controller/data.types';\r\nimport Query from './components/Query/Query';\r\nimport Modal from './components/Modal/Modal';\r\nimport Page from './components/Pages/Page';\r\nimport QueryEditor from './components/QueryEditor/QueryEditor';\r\nimport DataController from './data.controller/data.controller';\r\nimport QueryViewer from './components/QueryViewer/QueryViewer';\r\nimport SummaryViewer from './components/SummaryViewer/SummaryViewer';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  let dc = useRef<DataController|null>(null);\r\n  (dc.current === null) && (dc.current = new DataController());\r\n  console.log('[App]: Data Controller Version: ', dc.current.getVersion())\r\n\r\n  const [isModalActive, setIsModalActive] = useState<boolean>(false)\r\n  const [isEditingQuery, setIsEditingQuery] = useState<boolean>(false)\r\n  const [isViewingResult, setIsViewingResult] = useState<boolean>(false)\r\n  const [isViewingSummary, setIsViewingSummary] = useState<boolean>(false)\r\n  const [isFetching, setIsFetching] = useState<boolean>(false)\r\n  const [indexOfQueryOnModal, setIndexOfQueryOnModal] = useState<number>(-1)\r\n  const [hasResults, setHasResults] = useState<boolean>(false)\r\n  const [textToProcess, setTextToProcess] = useState<string>(\"\")\r\n  const [feedback, setFeedback] = useState<string>(\"\")\r\n  const [queries, setQueries] = useState<TUIQueryItem[]>([])\r\n  const [queriesResults, setQueriesResults] = useState<TBookSummary|null>()\r\n\r\n  const handleQueryEdit = (queryIndex: number)=>{\r\n    setIsEditingQuery(true)\r\n    setIndexOfQueryOnModal(queryIndex)\r\n    setIsModalActive(true)\r\n  }\r\n  const handleQueryView = (queryIndex: number)=>{\r\n    setIsViewingResult(true)\r\n    setIndexOfQueryOnModal(queryIndex)\r\n    setIsModalActive(true)\r\n  }\r\n  const handleResultSummaryView = () =>{\r\n    setIsViewingSummary(true)\r\n    // setIndexOfQueryOnModal(queryIndex)\r\n    setIsModalActive(true)\r\n  }\r\n  const handleQueryRemoval = (queryIndex: number)=>{\r\n    setQueries(qs => qs.filter((q, index) => index !== queryIndex))\r\n  }\r\n  const resetUi = ()=>{\r\n    setQueries([]);\r\n    setIsEditingQuery(false)\r\n    setIsViewingResult(false)\r\n    setIsViewingSummary(false)\r\n    setIndexOfQueryOnModal(-1)\r\n    setIsModalActive(false)\r\n    setTextToProcess(\"\")\r\n    setIsFetching(false)\r\n    setHasResults(false)\r\n    setFeedback(\"\")\r\n  }\r\n  const handleModalClose = ()=>{\r\n    \r\n    setIsModalActive(false)\r\n\r\n    setTimeout(()=>{\r\n      setIsEditingQuery(false)\r\n      setIsViewingResult(false)\r\n      setIsViewingSummary(false)\r\n      setIndexOfQueryOnModal(-1)\r\n    }, 300)\r\n    \r\n  }\r\n  const handleBookProcessing = async ()=>{\r\n    \r\n    setTimeout(()=>{\r\n      setIsFetching(true)\r\n      setHasResults(false)\r\n      setFeedback(\"Processing Text. This will take a minute... or two...\")\r\n    }, 0)\r\n    \r\n    const res = await dc.current?.processBook({book: textToProcess, queries: queries}, ()=>{})\r\n    setQueriesResults(res)\r\n    \r\n\r\n    setTimeout(()=>{\r\n      setIsFetching(false)\r\n      setHasResults(true)\r\n      setFeedback(\"Text was successfully processed... \")\r\n    }, 0)\r\n\r\n    setTimeout(()=>{\r\n      setFeedback(\"\")\r\n    }, 3000)\r\n  }\r\n  const handleCopy = (evt: any, text: string)=>{\r\n    evt.preventDefault();\r\n    console.log('[App]: \\n', text);\r\n    navigator.clipboard.writeText(text);\r\n  }\r\n  console.warn(\"[App]: Query Results: \", queriesResults)\r\n  return (\r\n    <main className=\"App\">\r\n      <section className=\"app-container\">\r\n\r\n        <section className=\"book-selector\">\r\n          <div className=\"selector-icons\">\r\n            <span className=\"reset-selection\" onClick={evt => resetUi()}><i className=\"fas fa-reply-all\"></i></span>\r\n            {hasResults && (<span className=\"view-result\" onClick={evt => handleResultSummaryView()}><i className=\"fas fa-eye\"></i></span>)}\r\n          </div>\r\n\r\n          <textarea onChange={(evt)=>setTextToProcess(evt.target.value)}\r\n                    placeholder=\"Enter the text to be processed, or its url...\"\r\n                    // defaultValue={textToProcess}\r\n                    value={textToProcess}\r\n          >\r\n          </textarea>\r\n          <div className={`progressbar ${isFetching ? 'progressbar--running' : ''}`}></div>\r\n\r\n          <div className=\"feedback\">\r\n            {feedback && (<p>{feedback}</p>)}\r\n          </div>\r\n        </section>\r\n\r\n\r\n\r\n\r\n        <section className=\"queries-area\">\r\n          {\r\n            queries && (\r\n              queries.map((query, index) => <Query data={query} key={index} hasResults={hasResults} index={index+1} onChange={()=>handleQueryEdit(index)} onView={()=>handleQueryView(index)} onRemove={()=>handleQueryRemoval(index)}/>)\r\n            )\r\n          }\r\n          <div className=\"add-query\" \r\n               onClick={evt=>setQueries(queries=> [...queries, {minLength: 0,maxLength: 10,topN: 50}])}>\r\n            <i className=\"fas fa-plus\"></i>\r\n            <span>*Add Query</span>\r\n          </div>\r\n        </section>\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        <section className=\"submit-button-area\">\r\n          <button className=\"btn btn-main\" onClick={evt => handleBookProcessing()}>\r\n            Process Content\r\n          </button>\r\n        </section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <section className={`modal-container ${isViewingResult || isViewingSummary ? 'modal-container--bg-white' : ''}`}>\r\n          <Modal isActive={isModalActive} onDeactivate={()=>handleModalClose()} >\r\n            <Page onClose={()=>handleModalClose()}>\r\n              {\r\n                isEditingQuery && (\r\n                  <QueryEditor  data={queries[indexOfQueryOnModal]} \r\n                              onChange={data => setQueries(qs => {\r\n                                setTimeout(()=>{\r\n                                  setIsEditingQuery(false)\r\n                                }, 300)\r\n                                \r\n                                setIsModalActive(false)\r\n                                return qs.map((q, index) => {\r\n                                  (index === indexOfQueryOnModal) && (q = {...data})\r\n                                  return q\r\n                                })\r\n                              })}\r\n                  />\r\n                )\r\n              }\r\n              {\r\n                isViewingResult && queriesResults && (\r\n                  <QueryViewer data={queriesResults?.results[indexOfQueryOnModal]} onCopy={(evt, text)=>handleCopy(evt, text)}/>\r\n                )\r\n              }\r\n\r\n              {\r\n                isViewingSummary && queriesResults && (\r\n                  <SummaryViewer data={queriesResults} onCopy={(evt, text)=>handleCopy(evt, text)}/>\r\n                )\r\n              }\r\n            </Page>\r\n          </Modal>\r\n        </section>       \r\n\r\n\r\n\r\n\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}