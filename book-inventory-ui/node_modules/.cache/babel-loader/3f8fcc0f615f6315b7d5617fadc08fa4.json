{"ast":null,"code":"var _jsxFileName = \"C:\\\\PersonalProjects\\\\corpus-word-inventory\\\\book-inventory-ui\\\\src\\\\components\\\\QueryViewer\\\\QueryViewer.tsx\";\nimport React from 'react';\nimport './QueryViewer.css';\n\nconst QueryViewer = ({\n  data,\n  onClose,\n  onCopy\n}) => {\n  const summary = `\nQuery Summary (${(data.durationMs / 1000).toFixed(2)}sec)\nCreated at: ${data._createdAt}\nExecution Time: ${(data.durationMs / 1000).toFixed(2)}sec\nQuery Definition: Searching for top '${data.uiQuery.topN}' most frequent tokens with length between '${data.uiQuery.minLength}' and '${data.uiQuery.maxLength}'\n\nQuery Results:\n` + data.data.reduce((acc, res, index) => acc + `${index + 1} - Found '${res.key}' with frequency '${res.frequency}' and length '${res.length}'\\n`, \"\");\n  return React.createElement(\"div\", {\n    className: \"query-viewer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"query-meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Meta Data\"), React.createElement(\"div\", {\n    className: \"data-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Query Timestamp\"), React.createElement(\"p\", {\n    className: \"data-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, data._createdAt), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Query Duration\"), React.createElement(\"p\", {\n    className: \"data-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, (data.durationMs / 1000).toFixed(2), \"sec\"))), React.createElement(\"div\", {\n    className: \"query-object\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Query Summary\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Searching for top '\", data.uiQuery.topN, \"' most frequent tokens with length between '\", data.uiQuery.minLength, \"' and '\", data.uiQuery.maxLength, \"'\"), React.createElement(\"div\", {\n    className: \"data-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Token Count\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Minimum Length\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Maximum Length\"), React.createElement(\"p\", {\n    className: \"data-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, data.uiQuery.topN), React.createElement(\"p\", {\n    className: \"data-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, data.uiQuery.minLength), React.createElement(\"p\", {\n    className: \"data-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, data.uiQuery.maxLength))), React.createElement(\"div\", {\n    className: \"query-result\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Query Results\"), data.data.map(res => {\n    return React.createElement(\"div\", {\n      className: \"data-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, `Found '${res.key}' with frequency '${res.frequency}' and length '${res.length}'`), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Token\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Frequency\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Length\"), React.createElement(\"p\", {\n      className: \"data-item data-item-token\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, res.key), React.createElement(\"p\", {\n      className: \"data-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, res.frequency), React.createElement(\"p\", {\n      className: \"data-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, res.length));\n  })));\n};\n\nexport default QueryViewer;","map":{"version":3,"sources":["C:/PersonalProjects/corpus-word-inventory/book-inventory-ui/src/components/QueryViewer/QueryViewer.tsx"],"names":["React","QueryViewer","data","onClose","onCopy","summary","durationMs","toFixed","_createdAt","uiQuery","topN","minLength","maxLength","reduce","acc","res","index","key","frequency","length","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,mBAAP;;AAWA,MAAMC,WAA6B,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAA6B;AAGjE,QAAMC,OAAO,GAAI;iBACF,CAACH,IAAI,CAACI,UAAL,GAAgB,IAAjB,EAAuBC,OAAvB,CAA+B,CAA/B,CAAkC;cACrCL,IAAI,CAACM,UAAW;kBACZ,CAACN,IAAI,CAACI,UAAL,GAAgB,IAAjB,EAAuBC,OAAvB,CAA+B,CAA/B,CAAkC;uCACbL,IAAI,CAACO,OAAL,CAAaC,IAAK,+CAA8CR,IAAI,CAACO,OAAL,CAAaE,SAAU,UAAST,IAAI,CAACO,OAAL,CAAaG,SAAU;;;CAJ5I,GAOdV,IAAI,CAACA,IAAL,CAAUW,MAAV,CAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,KAAX,KAAqBF,GAAG,GAAI,GAAEE,KAAK,GAAG,CAAE,aAAYD,GAAG,CAACE,GAAI,qBAAoBF,GAAG,CAACG,SAAU,iBAAgBH,GAAG,CAACI,MAAO,KAA1I,EAAgJ,EAAhJ,CAPF;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BjB,IAAI,CAACM,UAA/B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,EAIE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B,CAACN,IAAI,CAACI,UAAL,GAAgB,IAAjB,EAAuBC,OAAvB,CAA+B,CAA/B,CAA1B,QAJF,CAFF,CAHF,EAcE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBL,IAAI,CAACO,OAAL,CAAaC,IAArC,kDAAuFR,IAAI,CAACO,OAAL,CAAaE,SAApG,aAAsHT,IAAI,CAACO,OAAL,CAAaG,SAAnI,MAFF,EAGE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,EAIE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BV,IAAI,CAACO,OAAL,CAAaC,IAAvC,CAJF,EAKE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BR,IAAI,CAACO,OAAL,CAAaE,SAAvC,CALF,EAME;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BT,IAAI,CAACO,OAAL,CAAaG,SAAvC,CANF,CAHF,CAdF,EA2BE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAIIV,IAAI,CAACA,IAAL,CAAUkB,GAAV,CAAcL,GAAG,IAAI;AACnB,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,UAASA,GAAG,CAACE,GAAI,qBAAoBF,GAAG,CAACG,SAAU,iBAAgBH,GAAG,CAACI,MAAO,GAApF,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKE;AAAG,MAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CJ,GAAG,CAACE,GAA9C,CALF,EAME;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BF,GAAG,CAACG,SAA9B,CANF,EAOE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BH,GAAG,CAACI,MAA9B,CAPF,CADF;AAWD,GAZD,CAJJ,CA3BF,CADF;AAsDD,CAnED;;AAqEA,eAAelB,WAAf","sourcesContent":["import React from 'react';\r\n\r\n\r\nimport './QueryViewer.css';\r\nimport {  TQuerySummary } from '../../data.controller/data.types';\r\n\r\n\r\n\r\n\r\ntype TProps = {\r\n  data: TQuerySummary,\r\n  onClose: ()=>void\r\n  onCopy?: (summary: string)=>void\r\n}\r\nconst QueryViewer: React.FC<TProps> = ({data, onClose, onCopy}) => {\r\n\r\n\r\n  const summary = `\r\nQuery Summary (${(data.durationMs/1000).toFixed(2)}sec)\r\nCreated at: ${data._createdAt}\r\nExecution Time: ${(data.durationMs/1000).toFixed(2)}sec\r\nQuery Definition: Searching for top '${data.uiQuery.topN}' most frequent tokens with length between '${data.uiQuery.minLength}' and '${data.uiQuery.maxLength}'\r\n\r\nQuery Results:\r\n` + data.data.reduce((acc, res, index) => acc + `${index + 1} - Found '${res.key}' with frequency '${res.frequency}' and length '${res.length}'\\n`, \"\");\r\n\r\n\r\n  return (\r\n    <div className=\"query-viewer\">\r\n\r\n\r\n      <div className=\"query-meta\">\r\n        <h1>Meta Data</h1>\r\n        <div className=\"data-container\">\r\n          <p>Query Timestamp</p>\r\n          <p className=\"data-item\">{data._createdAt}</p>\r\n          <p>Query Duration</p>\r\n          <p className=\"data-item\">{(data.durationMs/1000).toFixed(2)}sec</p>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"query-object\">\r\n        <h1>Query Summary</h1>\r\n        <h3>Searching for top '{data.uiQuery.topN}' most frequent tokens with length between '{data.uiQuery.minLength}' and '{data.uiQuery.maxLength}'</h3>\r\n        <div className=\"data-container\">\r\n          <p>Token Count</p>\r\n          <p>Minimum Length</p>\r\n          <p>Maximum Length</p>\r\n          <p className=\"data-item\">{data.uiQuery.topN}</p>\r\n          <p className=\"data-item\">{data.uiQuery.minLength}</p>\r\n          <p className=\"data-item\">{data.uiQuery.maxLength}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"query-result\">\r\n        <h1>Query Results</h1>\r\n\r\n        {\r\n          data.data.map(res => {\r\n            return (\r\n              <div className=\"data-container\">\r\n                <h3>{`Found '${res.key}' with frequency '${res.frequency}' and length '${res.length}'`}</h3>\r\n                <p>Token</p>\r\n                <p>Frequency</p>\r\n                <p>Length</p>\r\n                <p className=\"data-item data-item-token\">{res.key}</p>\r\n                <p className=\"data-item\">{res.frequency}</p>\r\n                <p className=\"data-item\">{res.length}</p>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default QueryViewer;\r\n"]},"metadata":{},"sourceType":"module"}