{"ast":null,"code":"var _jsxFileName = \"C:\\\\PersonalProjects\\\\corpus-word-inventory\\\\book-inventory-ui\\\\src\\\\components\\\\Modal\\\\Modal.tsx\";\nimport React, { useState, useRef } from 'react';\nimport './Modal.css';\n\nconst Modal = ({\n  children,\n  onDeactivate,\n  isActive\n}) => {\n  const [isChildVisible, setIsChildVisible] = useState(false);\n  let isChildActivated = useRef(false);\n\n  if (isActive && !isChildActivated.current && !isChildVisible) {\n    isChildActivated.current = true;\n    setTimeout(() => {\n      setIsChildVisible(true);\n    }, 300);\n  }\n\n  return React.createElement(\"div\", {\n    className: `modal-container ${isActive ? 'modal-container--active' : ''}`,\n    onClick: evt => {\n      isChildActivated.current = false;\n      onDeactivate();\n      setIsChildVisible(false);\n      evt.stopPropagation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: `modal-children-container ${isChildVisible ? 'modal-children--visible' : ''}`,\n    onClick: evt => evt.stopPropagation(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, children));\n};\n\nexport default Modal;","map":{"version":3,"sources":["C:/PersonalProjects/corpus-word-inventory/book-inventory-ui/src/components/Modal/Modal.tsx"],"names":["React","useState","useRef","Modal","children","onDeactivate","isActive","isChildVisible","setIsChildVisible","isChildActivated","current","setTimeout","evt","stopPropagation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AAGA,OAAO,aAAP;;AAQA,MAAMC,KAAuB,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,YAAX;AAAwBC,EAAAA;AAAxB,CAAD,KAAuC;AAErE,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAU,KAAV,CAApD;AACA,MAAIQ,gBAAgB,GAAGP,MAAM,CAAU,KAAV,CAA7B;;AACA,MAAGI,QAAQ,IAAI,CAACG,gBAAgB,CAACC,OAA9B,IAAyC,CAACH,cAA7C,EAA4D;AAC1DE,IAAAA,gBAAgB,CAACC,OAAjB,GAA2B,IAA3B;AACAC,IAAAA,UAAU,CAAC,MAAI;AACbH,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,KAFS,EAEP,GAFO,CAAV;AAGD;;AAGD,SACE;AAAK,IAAA,SAAS,EAAG,mBAAkBF,QAAQ,GAAC,yBAAD,GAA2B,EAAG,EAAzE;AACM,IAAA,OAAO,EAAEM,GAAG,IAAI;AACdH,MAAAA,gBAAgB,CAACC,OAAjB,GAA2B,KAA3B;AACAL,MAAAA,YAAY;AACZG,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAI,MAAAA,GAAG,CAACC,eAAJ;AACD,KANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAK,IAAA,SAAS,EAAG,4BAA2BN,cAAc,GAAC,yBAAD,GAA2B,EAAG,EAAxF;AAA2F,IAAA,OAAO,EAAEK,GAAG,IAAIA,GAAG,CAACC,eAAJ,EAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QADH,CARF,CADF;AAgBD,CA5BD;;AA8BA,eAAeD,KAAf","sourcesContent":["import React, { useState, useRef } from 'react';\r\n\r\n\r\nimport './Modal.css';\r\n\r\n\r\n\r\ntype TProps = {\r\n  isActive: boolean\r\n  onDeactivate: ()=>void\r\n}\r\nconst Modal: React.FC<TProps> = ({children, onDeactivate,isActive}) => {\r\n\r\n  const [isChildVisible, setIsChildVisible] = useState<boolean>(false)\r\n  let isChildActivated = useRef<boolean>(false)  \r\n  if(isActive && !isChildActivated.current && !isChildVisible){\r\n    isChildActivated.current = true\r\n    setTimeout(()=>{\r\n      setIsChildVisible(true)\r\n    }, 300)     \r\n  }\r\n\r\n\r\n  return (\r\n    <div className={`modal-container ${isActive?'modal-container--active':''}`}\r\n          onClick={evt => {\r\n            isChildActivated.current = false\r\n            onDeactivate()\r\n            setIsChildVisible(false)\r\n            evt.stopPropagation()\r\n          }}\r\n    >\r\n      <div className={`modal-children-container ${isChildVisible?'modal-children--visible':''}`} onClick={evt => evt.stopPropagation()}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default Modal;\r\n"]},"metadata":{},"sourceType":"module"}