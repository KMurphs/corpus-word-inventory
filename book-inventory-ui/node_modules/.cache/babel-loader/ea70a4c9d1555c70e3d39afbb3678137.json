{"ast":null,"code":"const timestampToLocaleString = ts => new Date(new Date(ts).getTime() - new Date().getTimezoneOffset() * 60000).toISOString().replace(/.[0-9]+Z$/, '').replace('T', ' ');\n\nconst typeConverter = {\n  toBookSummary(bookObj) {\n    return {\n      id: bookObj[\"id\"] ? bookObj[\"id\"] : \"\",\n      meta: bookObj[\"meta\"] ? bookObj[\"meta\"] : \"\",\n      idType: bookObj[\"idType\"] ? bookObj[\"idType\"] : \"\",\n      wordsCount: bookObj[\"wordsCount\"] || bookObj[\"wordsCount\"] === 0 ? bookObj[\"wordsCount\"] : NaN,\n      uniqueWordsCount: bookObj[\"uniqueWordsCount\"] || bookObj[\"uniqueWordsCount\"] === 0 ? bookObj[\"uniqueWordsCount\"] : NaN,\n      summaryDurationSec: bookObj[\"summaryDurationSec\"] || bookObj[\"summaryDurationSec\"] === 0 ? bookObj[\"summaryDurationSec\"] : NaN,\n      createdAt: bookObj[\"createdAt\"] ? bookObj[\"createdAt\"] : 0,\n      _createdAt: bookObj[\"createdAt\"] ? timestampToLocaleString(bookObj[\"createdAt\"]) : \"Invalid Date\",\n      mostFrequentWord: this.toTokenSummary(bookObj[\"mostFrequentWord\"]),\n      longestWord: this.toTokenSummary(bookObj[\"longestWord\"]),\n      results: bookObj[\"results\"] ? bookObj[\"results\"].map(res => this.toQuerySummary(res)) : []\n    };\n  },\n\n  toQuerySummary(resObj) {\n    return {\n      uiQuery: this.toUIQueryItem(resObj[\"minTokenLength\"], resObj[\"maxTokenLength\"], resObj[\"topNCount\"]),\n      createdAt: resObj[\"createdAt\"] ? resObj[\"createdAt\"] : 0,\n      _createdAt: resObj[\"createdAt\"] ? timestampToLocaleString(resObj[\"createdAt\"]) : \"Invalid Date\",\n      durationMs: resObj[\"durationMs\"] || resObj[\"durationMs\"] === 0 ? resObj[\"durationMs\"] : NaN,\n      data: resObj[\"data\"] ? resObj[\"data\"].map(item => this.toTokenSummary(item)) : []\n    };\n  },\n\n  toTokenSummary(tokenObj) {\n    return {\n      key: tokenObj[\"key\"] ? tokenObj[\"key\"] : \"\",\n      frequency: tokenObj[\"frequency\"] || tokenObj[\"frequency\"] === 0 ? tokenObj[\"frequency\"] : NaN,\n      length: tokenObj[\"length\"] || tokenObj[\"length\"] === 0 ? tokenObj[\"length\"] : NaN\n    };\n  },\n\n  toUIQueryItem(minTokenLength, maxTokenLength, topNCount) {\n    return {\n      minLength: minTokenLength || minTokenLength === 0 ? minTokenLength : NaN,\n      maxLength: maxTokenLength || maxTokenLength === 0 ? maxTokenLength : NaN,\n      topN: topNCount || topNCount === 0 ? topNCount : NaN\n    };\n  }\n\n};\nexport { typeConverter };","map":{"version":3,"sources":["C:/PersonalProjects/corpus-word-inventory/book-inventory-ui/src/data.controller/data.types.ts"],"names":["timestampToLocaleString","ts","Date","getTime","getTimezoneOffset","toISOString","replace","typeConverter","toBookSummary","bookObj","id","meta","idType","wordsCount","NaN","uniqueWordsCount","summaryDurationSec","createdAt","_createdAt","mostFrequentWord","toTokenSummary","longestWord","results","map","res","toQuerySummary","resObj","uiQuery","toUIQueryItem","durationMs","data","item","tokenObj","key","frequency","length","minTokenLength","maxTokenLength","topNCount","minLength","maxLength","topN"],"mappings":"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","sourcesContent":["\r\nexport type TBookSummary = {\r\n  id: string,\r\n  meta: string,\r\n  idType: string,\r\n  wordsCount: number,\r\n  uniqueWordsCount: number,\r\n  mostFrequentWord: TTokenSummary,\r\n  longestWord: TTokenSummary,\r\n  summaryDurationSec: number,\r\n  createdAt: number,\r\n  _createdAt: string,\r\n  results: TQuerySummary[]\r\n}\r\n\r\n\r\nexport type TTokenSummary = {\r\n  key: string,\r\n  frequency: number,\r\n  length: number\r\n}\r\n\r\nexport type TQuerySummary = {\r\n  uiQuery: TUIQueryItem\r\n  createdAt: number\r\n  _createdAt: string\r\n  durationMs: number\r\n  data: TTokenSummary[]\r\n}\r\n\r\n\r\n\r\nexport type TUIQueryItem = {\r\n  minLength: number,\r\n  maxLength: number,\r\n  topN: number\r\n}\r\n\r\nexport type TUIQuery = {\r\n  book: string,\r\n  queries: TUIQueryItem[]\r\n}\r\n\r\nexport type TTypeConverter = {\r\n  toBookSummary: (bookObj: any) => TBookSummary,\r\n  toTokenSummary: (tokenObj: any) => TTokenSummary,\r\n  toQuerySummary: (resObj: any) => TQuerySummary,\r\n  toUIQueryItem: (minTokenLength: number, maxTokenLength: number, topNCount: number) => TUIQueryItem\r\n}\r\n\r\n\r\nconst timestampToLocaleString = (ts: number)=>new Date(new Date(ts).getTime() - new Date().getTimezoneOffset() * 60000).toISOString().replace(/.[0-9]+Z$/,'').replace('T',' ')\r\nconst typeConverter: TTypeConverter = {\r\n  toBookSummary(bookObj: any): TBookSummary{\r\n    return {\r\n      id: bookObj[\"id\"] ? bookObj[\"id\"] : \"\",\r\n      meta: bookObj[\"meta\"] ? bookObj[\"meta\"] : \"\",\r\n      idType: bookObj[\"idType\"] ? bookObj[\"idType\"] : \"\",\r\n\r\n      wordsCount: bookObj[\"wordsCount\"] || bookObj[\"wordsCount\"] === 0 ? bookObj[\"wordsCount\"] : NaN,\r\n      uniqueWordsCount: bookObj[\"uniqueWordsCount\"] || bookObj[\"uniqueWordsCount\"] === 0  ? bookObj[\"uniqueWordsCount\"] : NaN,\r\n      summaryDurationSec: bookObj[\"summaryDurationSec\"] || bookObj[\"summaryDurationSec\"] === 0  ? bookObj[\"summaryDurationSec\"] : NaN,\r\n      createdAt: bookObj[\"createdAt\"] ? bookObj[\"createdAt\"] : 0,\r\n      _createdAt: bookObj[\"createdAt\"] ? timestampToLocaleString(bookObj[\"createdAt\"]) : \"Invalid Date\",\r\n\r\n      mostFrequentWord: this.toTokenSummary(bookObj[\"mostFrequentWord\"]),\r\n      longestWord: this.toTokenSummary(bookObj[\"longestWord\"]),\r\n      \r\n      results: bookObj[\"results\"] ? bookObj[\"results\"].map((res: any) => this.toQuerySummary(res)) : []\r\n    }\r\n  },\r\n\r\n\r\n\r\n  toQuerySummary(resObj: any): TQuerySummary {\r\n      return {\r\n        uiQuery: this.toUIQueryItem(resObj[\"minTokenLength\"], resObj[\"maxTokenLength\"], resObj[\"topNCount\"]),\r\n        createdAt: resObj[\"createdAt\"] ? resObj[\"createdAt\"] : 0,\r\n        _createdAt: resObj[\"createdAt\"] ? timestampToLocaleString(resObj[\"createdAt\"]) : \"Invalid Date\",\r\n        durationMs: resObj[\"durationMs\"] || resObj[\"durationMs\"] === 0 ? resObj[\"durationMs\"] : NaN,\r\n        data: resObj[\"data\"] ? resObj[\"data\"].map((item: any) => this.toTokenSummary(item)) : []\r\n      }\r\n  },\r\n\r\n\r\n  toTokenSummary(tokenObj: any): TTokenSummary {\r\n      return {\r\n        key: tokenObj[\"key\"] ? tokenObj[\"key\"] : \"\",\r\n        frequency: tokenObj[\"frequency\"] || tokenObj[\"frequency\"] === 0 ? tokenObj[\"frequency\"] : NaN,\r\n        length: tokenObj[\"length\"] || tokenObj[\"length\"] === 0 ? tokenObj[\"length\"] : NaN,\r\n      }\r\n  },\r\n\r\n\r\n  toUIQueryItem(minTokenLength: number, maxTokenLength: number, topNCount: number): TUIQueryItem {\r\n      return {\r\n        minLength: minTokenLength || minTokenLength === 0 ? minTokenLength : NaN,\r\n        maxLength: maxTokenLength || maxTokenLength === 0  ? maxTokenLength : NaN,\r\n        topN: topNCount || topNCount === 0  ? topNCount : NaN,\r\n      }\r\n  }\r\n}\r\n\r\nexport {typeConverter};\r\n"]},"metadata":{},"sourceType":"module"}