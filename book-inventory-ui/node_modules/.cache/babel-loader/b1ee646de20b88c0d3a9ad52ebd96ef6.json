{"ast":null,"code":"var _jsxFileName = \"C:\\\\PersonalProjects\\\\corpus-word-inventory\\\\book-inventory-ui\\\\src\\\\components\\\\QueryEditor\\\\QueryEditor.tsx\";\nimport React, { useState } from 'react';\nimport './QueryEditor.css';\nimport { CustomInputNumberUndefined } from '../CustomInput/CustomInput';\nvar TUIQueryItemEnum;\n\n(function (TUIQueryItemEnum) {\n  TUIQueryItemEnum[TUIQueryItemEnum[\"TOPN\"] = 0] = \"TOPN\";\n  TUIQueryItemEnum[TUIQueryItemEnum[\"MIN\"] = 1] = \"MIN\";\n  TUIQueryItemEnum[TUIQueryItemEnum[\"MAX\"] = 2] = \"MAX\";\n})(TUIQueryItemEnum || (TUIQueryItemEnum = {}));\n\nconst QueryEditor = ({\n  data,\n  onChange\n}) => {\n  const [localData, _setLocalData] = useState(data);\n\n  const setLocalData = (val, field) => {\n    let tmp = localData;\n    field === TUIQueryItemEnum.TOPN && (tmp.topN = parseFloat(val));\n    field === TUIQueryItemEnum.MIN && (tmp.minLength = parseFloat(val));\n    field === TUIQueryItemEnum.MAX && (tmp.maxLength = parseFloat(val));\n\n    _setLocalData({ ...tmp\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"query-editor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"query-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"supporting-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Enter minimum length of tokens of interest\"), React.createElement(CustomInputNumberUndefined, {\n    value: localData.topN,\n    handleChange: val => setLocalData(val, TUIQueryItemEnum.TOPN),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"query-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"supporting-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Enter minimum length of tokens of interest\"), React.createElement(CustomInputNumberUndefined, {\n    value: localData.minLength,\n    handleChange: val => setLocalData(val, TUIQueryItemEnum.MIN),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"query-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"supporting-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Enter maximum length of tokens of interest\"), React.createElement(CustomInputNumberUndefined, {\n    value: localData.maxLength,\n    handleChange: val => setLocalData(val, TUIQueryItemEnum.MAX),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"query-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-main\",\n    onClick: () => onChange({ ...localData\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Save Query\")));\n};\n\nexport default QueryEditor;","map":{"version":3,"sources":["C:/PersonalProjects/corpus-word-inventory/book-inventory-ui/src/components/QueryEditor/QueryEditor.tsx"],"names":["React","useState","CustomInputNumberUndefined","TUIQueryItemEnum","QueryEditor","data","onChange","localData","_setLocalData","setLocalData","val","field","tmp","TOPN","topN","parseFloat","MIN","minLength","MAX","maxLength"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,OAAO,mBAAP;AAEA,SAASC,0BAAT,QAA2C,4BAA3C;IAIKC,gB;;WAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;GAAAA,gB,KAAAA,gB;;AASL,MAAMC,WAA6B,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAsB;AAE1D,QAAM,CAACC,SAAD,EAAYC,aAAZ,IAA6BP,QAAQ,CAAeI,IAAf,CAA3C;;AACA,QAAMI,YAAY,GAAG,CAACC,GAAD,EAAcC,KAAd,KAAwC;AAC3D,QAAIC,GAAiB,GAAGL,SAAxB;AACCI,IAAAA,KAAK,KAAKR,gBAAgB,CAACU,IAA5B,KAAsCD,GAAG,CAACE,IAAJ,GAAWC,UAAU,CAACL,GAAD,CAA3D;AACCC,IAAAA,KAAK,KAAKR,gBAAgB,CAACa,GAA5B,KAAqCJ,GAAG,CAACK,SAAJ,GAAgBF,UAAU,CAACL,GAAD,CAA/D;AACCC,IAAAA,KAAK,KAAKR,gBAAgB,CAACe,GAA5B,KAAqCN,GAAG,CAACO,SAAJ,GAAgBJ,UAAU,CAACL,GAAD,CAA/D;;AACAF,IAAAA,aAAa,CAAC,EAAC,GAAGI;AAAJ,KAAD,CAAb;AACD,GAND;;AAOA,SACY;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,EAEE,oBAAC,0BAAD;AAA4B,IAAA,KAAK,EAAEL,SAAS,CAACO,IAA7C;AAAmD,IAAA,YAAY,EAAGJ,GAAD,IAAOD,YAAY,CAACC,GAAD,EAAMP,gBAAgB,CAACU,IAAvB,CAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAOE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,EAEE,oBAAC,0BAAD;AAA4B,IAAA,KAAK,EAAEN,SAAS,CAACU,SAA7C;AAAwD,IAAA,YAAY,EAAGP,GAAD,IAAOD,YAAY,CAACC,GAAD,EAAMP,gBAAgB,CAACa,GAAvB,CAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAPF,EAYE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,EAEE,oBAAC,0BAAD;AAA4B,IAAA,KAAK,EAAET,SAAS,CAACY,SAA7C;AAAwD,IAAA,YAAY,EAAGT,GAAD,IAAOD,YAAY,CAACC,GAAD,EAAMP,gBAAgB,CAACe,GAAvB,CAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAZF,EAiBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAE,MAAIZ,QAAQ,CAAC,EAAC,GAAGC;AAAJ,KAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAjBF,CADZ;AAyBD,CAnCD;;AAqCA,eAAeH,WAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nimport './QueryEditor.css';\r\nimport { TUIQueryItem } from '../../data.controller/data.types';\r\nimport { CustomInputNumberUndefined } from '../CustomInput/CustomInput';\r\n\r\n\r\n\r\nenum TUIQueryItemEnum{\r\n  TOPN = 0,\r\n  MIN,\r\n  MAX\r\n}\r\ntype TProps = {\r\n  data: TUIQueryItem,\r\n  onChange: (updatedData: TUIQueryItem)=>void\r\n}\r\nconst QueryEditor: React.FC<TProps> = ({data, onChange}) => {\r\n\r\n  const [localData, _setLocalData] = useState<TUIQueryItem>(data)\r\n  const setLocalData = (val: string, field: TUIQueryItemEnum)=>{\r\n    let tmp: TUIQueryItem = localData;\r\n    (field === TUIQueryItemEnum.TOPN) && (tmp.topN = parseFloat(val));\r\n    (field === TUIQueryItemEnum.MIN) && (tmp.minLength = parseFloat(val));\r\n    (field === TUIQueryItemEnum.MAX) && (tmp.maxLength = parseFloat(val));\r\n    _setLocalData({...tmp});\r\n  }\r\n  return (\r\n              <div className=\"query-editor\">\r\n\r\n                <div className=\"query-item\">\r\n                  <div className={\"supporting-text\"}>Enter minimum length of tokens of interest</div>\r\n                  <CustomInputNumberUndefined value={localData.topN} handleChange={(val)=>setLocalData(val, TUIQueryItemEnum.TOPN)} />\r\n                </div>\r\n                \r\n                <div className=\"query-item\">\r\n                  <div className={\"supporting-text\"}>Enter minimum length of tokens of interest</div>\r\n                  <CustomInputNumberUndefined value={localData.minLength} handleChange={(val)=>setLocalData(val, TUIQueryItemEnum.MIN)} />\r\n                </div>\r\n\r\n                <div className=\"query-item\">\r\n                  <div className={\"supporting-text\"}>Enter maximum length of tokens of interest</div>\r\n                  <CustomInputNumberUndefined value={localData.maxLength} handleChange={(val)=>setLocalData(val, TUIQueryItemEnum.MAX)} />\r\n                </div>\r\n\r\n                <div className=\"query-item\">\r\n                  <button className=\"btn btn-main\" onClick={()=>onChange({...localData})}>Save Query</button>\r\n                </div>\r\n              </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default QueryEditor;\r\n"]},"metadata":{},"sourceType":"module"}