{"ast":null,"code":"import React from'react';import'./QueryViewer.css';var QueryViewer=function QueryViewer(_ref){var data=_ref.data,onCopy=_ref.onCopy;var summary=\"\\nQuery Summary (\".concat((data.durationMs/1000).toFixed(2),\"sec)\\nCreated at: \").concat(data._createdAt,\"\\nExecution Time: \").concat((data.durationMs/1000).toFixed(2),\"sec\\nQuery Definition: Searching for top '\").concat(data.uiQuery.topN,\"' most frequent tokens with length between '\").concat(data.uiQuery.minLength,\"' and '\").concat(data.uiQuery.maxLength,\"'\\n\\nQuery Results:\\n\")+data.data.reduce(function(acc,res,index){return acc+\"\".concat(index+1,\" - Found '\").concat(res.key,\"' with frequency '\").concat(res.frequency,\"' and length '\").concat(res.length,\"'\\n\");},\"\");return React.createElement(\"div\",{className:\"query-viewer\"},React.createElement(\"div\",{className:\"query-copy\"},React.createElement(\"span\",{onClick:function onClick(evt){return onCopy&&onCopy(evt,summary);}},React.createElement(\"i\",{className:\"fas fa-copy\"}))),React.createElement(\"div\",{className:\"query-meta\"},React.createElement(\"h1\",null,\"Meta Data\"),React.createElement(\"div\",{className:\"data-container\"},React.createElement(\"p\",null,\"Query Timestamp\"),React.createElement(\"p\",{className:\"data-item\"},data._createdAt),React.createElement(\"p\",null,\"Query Duration\"),React.createElement(\"p\",{className:\"data-item\"},(data.durationMs/1000).toFixed(2),\"sec\"))),React.createElement(\"div\",{className:\"query-object\"},React.createElement(\"h1\",null,\"Query Summary\"),React.createElement(\"h3\",null,\"Searching for top '\",data.uiQuery.topN,\"' most frequent tokens with length between '\",data.uiQuery.minLength,\"' and '\",data.uiQuery.maxLength,\"'\"),React.createElement(\"div\",{className:\"data-container\"},React.createElement(\"p\",null,\"Token Count\"),React.createElement(\"p\",null,\"Minimum Length\"),React.createElement(\"p\",null,\"Maximum Length\"),React.createElement(\"p\",{className:\"data-item\"},data.uiQuery.topN),React.createElement(\"p\",{className:\"data-item\"},data.uiQuery.minLength),React.createElement(\"p\",{className:\"data-item\"},data.uiQuery.maxLength))),React.createElement(\"div\",{className:\"query-result\"},React.createElement(\"h1\",null,\"Query Results\"),data.data.map(function(res,index){return React.createElement(\"div\",{className:\"data-container\",key:index},React.createElement(\"h3\",null,\"Found '\".concat(res.key,\"' with frequency '\").concat(res.frequency,\"' and length '\").concat(res.length,\"'\")),React.createElement(\"p\",null,\"Token\"),React.createElement(\"p\",null,\"Frequency\"),React.createElement(\"p\",null,\"Length\"),React.createElement(\"p\",{className:\"data-item data-item-token\"},res.key),React.createElement(\"p\",{className:\"data-item\"},res.frequency),React.createElement(\"p\",{className:\"data-item\"},res.length));})));};export default QueryViewer;","map":{"version":3,"sources":["C:/PersonalProjects/corpus-word-inventory/book-inventory-ui/src/components/QueryViewer/QueryViewer.tsx"],"names":["React","QueryViewer","data","onCopy","summary","durationMs","toFixed","_createdAt","uiQuery","topN","minLength","maxLength","reduce","acc","res","index","key","frequency","length","evt","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n\r\nimport './QueryViewer.css';\r\nimport {  TQuerySummary } from '../../data.controller/data.types';\r\n\r\n\r\n\r\n\r\ntype TProps = {\r\n  data: TQuerySummary,\r\n  onCopy: (evt: any, summary: string)=>void\r\n}\r\nconst QueryViewer: React.FC<TProps> = ({data, onCopy}) => {\r\n\r\n\r\n  const summary = `\r\nQuery Summary (${(data.durationMs/1000).toFixed(2)}sec)\r\nCreated at: ${data._createdAt}\r\nExecution Time: ${(data.durationMs/1000).toFixed(2)}sec\r\nQuery Definition: Searching for top '${data.uiQuery.topN}' most frequent tokens with length between '${data.uiQuery.minLength}' and '${data.uiQuery.maxLength}'\r\n\r\nQuery Results:\r\n` + data.data.reduce((acc, res, index) => acc + `${index + 1} - Found '${res.key}' with frequency '${res.frequency}' and length '${res.length}'\\n`, \"\");\r\n\r\n\r\n  return (\r\n    <div className=\"query-viewer\">\r\n\r\n      <div className=\"query-copy\"><span  onClick={evt=>onCopy && onCopy(evt, summary)}><i className=\"fas fa-copy\"></i></span></div>\r\n\r\n      <div className=\"query-meta\">\r\n        <h1>Meta Data</h1>\r\n        <div className=\"data-container\">\r\n          <p>Query Timestamp</p>\r\n          <p className=\"data-item\">{data._createdAt}</p>\r\n          <p>Query Duration</p>\r\n          <p className=\"data-item\">{(data.durationMs/1000).toFixed(2)}sec</p>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"query-object\">\r\n        <h1>Query Summary</h1>\r\n        <h3>Searching for top '{data.uiQuery.topN}' most frequent tokens with length between '{data.uiQuery.minLength}' and '{data.uiQuery.maxLength}'</h3>\r\n        <div className=\"data-container\">\r\n          <p>Token Count</p>\r\n          <p>Minimum Length</p>\r\n          <p>Maximum Length</p>\r\n          <p className=\"data-item\">{data.uiQuery.topN}</p>\r\n          <p className=\"data-item\">{data.uiQuery.minLength}</p>\r\n          <p className=\"data-item\">{data.uiQuery.maxLength}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"query-result\">\r\n        <h1>Query Results</h1>\r\n\r\n        {\r\n          data.data.map((res, index) => {\r\n            return (\r\n              <div className=\"data-container\" key={index}>\r\n                <h3>{`Found '${res.key}' with frequency '${res.frequency}' and length '${res.length}'`}</h3>\r\n                <p>Token</p>\r\n                <p>Frequency</p>\r\n                <p>Length</p>\r\n                <p className=\"data-item data-item-token\">{res.key}</p>\r\n                <p className=\"data-item\">{res.frequency}</p>\r\n                <p className=\"data-item\">{res.length}</p>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default QueryViewer;\r\n"]},"metadata":{},"sourceType":"module"}