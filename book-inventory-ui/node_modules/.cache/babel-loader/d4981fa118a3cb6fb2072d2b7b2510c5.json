{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\PersonalProjects\\\\corpus-word-inventory\\\\book-inventory-ui\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\PersonalProjects\\\\corpus-word-inventory\\\\book-inventory-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\PersonalProjects\\\\corpus-word-inventory\\\\book-inventory-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\PersonalProjects\\\\corpus-word-inventory\\\\book-inventory-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import httpRequest from\"./utils/data.fetch\";import{typeConverter}from\"./data.types\";var DataController=/*#__PURE__*/function(){_createClass(DataController,[{key:\"getVersion\",// private urlBaseDevelopment: string = \"https://localhost:5051/\";\n// private urlBaseProduction: string = \"https://corpus-inventory.herokuapp.com/\";\n// private urlBaseProduction: string = `${window.location.origin}/`; //Prevent the cors error between http and https\n// private urlGetABook: string = \"api/corpusinventory/{id}\";\n// private setUiData: Function\n// private timerID: any\n// private dataRefreshRateSec: number = 15;\nvalue:function getVersion(){return'1.0';}// constructor(setUiData: Function){\n}]);function DataController(){_classCallCheck(this,DataController);this.urlBaseDevelopment=\"http://localhost:5050/\";this.urlBase=\"\";this.urlGetAllBooks=\"api/corpusinventory\";this.urlProcessABook=\"api/corpusinventory\";// Determine whether we shoudl use dev urls or production urls at heroku\n// if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n//   console.warn(\"[DC]: App is in Development Mode\");\n//   this.urlBase = this.urlBaseDevelopment;\n// } else {\n//   console.warn(\"[DC]: App is in Production Mode\");\n//   this.urlBase = this.urlBaseProduction;\n// }\n// this.urlBase = this.urlBaseDevelopment;\n// this.urlBase = this.urlBaseProduction;\nthis.urlBase=\"\".concat(window.location.origin,\"/\");if(this.urlBase.indexOf(\"localhost\")!==-1){this.urlBase=this.urlBaseDevelopment;}// this.setUiData = setUiData\n// const _this = this\n// this.timerID = setInterval(()=>{\n//   _this.getBooks()\n// }, this.dataRefreshRateSec)\n}// Makes sure we are talking to right backend\n_createClass(DataController,[{key:\"buildURL\",value:function buildURL(url){return\"\".concat(this.urlBase).concat(url);}},{key:\"getBooks\",value:function(){var _getBooks=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var rawBooks;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return httpRequest(this.buildURL(this.urlGetAllBooks));case 2:rawBooks=_context.sent;return _context.abrupt(\"return\",rawBooks.map(function(rawBook){return typeConverter.toBookSummary(rawBook);}));case 4:case\"end\":return _context.stop();}}},_callee,this);}));function getBooks(){return _getBooks.apply(this,arguments);}return getBooks;}()},{key:\"getBookById\",value:function(){var _getBookById=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(bookId){var rawBook;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return httpRequest(\"\".concat(this.buildURL(this.urlGetAllBooks),\"/\").concat(bookId));case 2:rawBook=_context2.sent;return _context2.abrupt(\"return\",typeConverter.toBookSummary(rawBook));case 4:case\"end\":return _context2.stop();}}},_callee2,this);}));function getBookById(_x){return _getBookById.apply(this,arguments);}return getBookById;}()},{key:\"processBook\",value:function processBook(uiQuery,cb){var _this=this;return new Promise(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(resolve,reject){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return httpRequest(\"\".concat(_this.buildURL(_this.urlProcessABook)),uiQuery,\"POST\").then(function(res){console.log(res);cb();resolve(typeConverter.toBookSummary(res));}).catch(function(err){reject(err);});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x2,_x3){return _ref.apply(this,arguments);};}());}}]);return DataController;}();export{DataController as default};","map":{"version":3,"sources":["C:/PersonalProjects/corpus-word-inventory/book-inventory-ui/src/data.controller/data.controller.ts"],"names":["httpRequest","typeConverter","DataController","urlBaseDevelopment","urlBase","urlGetAllBooks","urlProcessABook","window","location","origin","indexOf","url","buildURL","rawBooks","map","rawBook","toBookSummary","bookId","uiQuery","cb","Promise","resolve","reject","then","res","console","log","catch","err"],"mappings":"2kBAAA,MAAOA,CAAAA,WAAP,KAAwB,oBAAxB,CACA,OAAiCC,aAAjC,KAAsD,cAAtD,C,GAMqBC,CAAAA,c,wEACnB;AAEA;AACA;AAGA;AAGA;AACA;AACA;2BACY,CACV,MAAO,KAAP,CACD,CACD;IACA,yBAAa,2CAfLC,kBAeK,CAfwB,wBAexB,MAZLC,OAYK,CAZa,EAYb,MAXLC,cAWK,CAXoB,qBAWpB,MATLC,eASK,CATqB,qBASrB,CACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAKF,OAAL,WAAkBG,MAAM,CAACC,QAAP,CAAgBC,MAAlC,MACA,GAAG,KAAKL,OAAL,CAAaM,OAAb,CAAqB,WAArB,IAAsC,CAAC,CAA1C,CAA4C,CAC1C,KAAKN,OAAL,CAAe,KAAKD,kBAApB,CACD,CACD;AAEA;AACA;AACA;AACA;AAED,CAKD;qEACSQ,G,CAAY,CACnB,gBAAU,KAAKP,OAAf,SAAyBO,GAAzB,EACD,C,+QAOsBX,CAAAA,WAAW,CAAC,KAAKY,QAAL,CAAc,KAAKP,cAAnB,CAAD,C,QAA5BQ,Q,+CACIA,QAAD,CAAoBC,GAApB,CAAwB,SAACC,OAAD,QAAkBd,CAAAA,aAAa,CAACe,aAAd,CAA4BD,OAA5B,CAAlB,EAAxB,C,gRAESE,M,yJACIjB,CAAAA,WAAW,WAAI,KAAKY,QAAL,CAAc,KAAKP,cAAnB,CAAJ,aAA0CY,MAA1C,E,QAA3BF,O,iDACGd,aAAa,CAACe,aAAd,CAA4BD,OAA5B,C,4MAEGG,O,CAAmBC,E,CAAoC,gBACjE,MAAO,IAAIC,CAAAA,OAAJ,0FAAY,kBAAOC,OAAP,CAAgBC,MAAhB,6IACXtB,CAAAA,WAAW,WAAI,KAAI,CAACY,QAAL,CAAc,KAAI,CAACN,eAAnB,CAAJ,EAA2CY,OAA3C,CAAoD,MAApD,CAAX,CACLK,IADK,CACA,SAACC,GAAD,CAAO,CACXC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACAL,EAAE,GACFE,OAAO,CAACpB,aAAa,CAACe,aAAd,CAA4BQ,GAA5B,CAAD,CAAP,CACD,CALK,EAMLG,KANK,CAMC,SAACC,GAAD,CAAO,CACZN,MAAM,CAACM,GAAD,CAAN,CACD,CARK,CADW,yDAAZ,oEAAP,CAYD,C,qCA1EkB1B,c","sourcesContent":["import httpRequest from \"./utils/data.fetch\";\r\nimport { TUIQuery, TBookSummary, typeConverter } from \"./data.types\";\r\n\r\n\r\n\r\n\r\n\r\nexport default class DataController {\r\n  // private urlBaseDevelopment: string = \"https://localhost:5051/\";\r\n  private urlBaseDevelopment: string = \"http://localhost:5050/\";\r\n  // private urlBaseProduction: string = \"https://corpus-inventory.herokuapp.com/\";\r\n  // private urlBaseProduction: string = `${window.location.origin}/`; //Prevent the cors error between http and https\r\n  private urlBase: string = \"\";\r\n  private urlGetAllBooks: string = \"api/corpusinventory\";\r\n  // private urlGetABook: string = \"api/corpusinventory/{id}\";\r\n  private urlProcessABook: string = \"api/corpusinventory\";\r\n\r\n  // private setUiData: Function\r\n  // private timerID: any\r\n  // private dataRefreshRateSec: number = 15;\r\n  getVersion(){\r\n    return '1.0'\r\n  }\r\n  // constructor(setUiData: Function){\r\n  constructor(){\r\n    // Determine whether we shoudl use dev urls or production urls at heroku\r\n    // if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    //   console.warn(\"[DC]: App is in Development Mode\");\r\n    //   this.urlBase = this.urlBaseDevelopment;\r\n    // } else {\r\n    //   console.warn(\"[DC]: App is in Production Mode\");\r\n    //   this.urlBase = this.urlBaseProduction;\r\n    // }\r\n    // this.urlBase = this.urlBaseDevelopment;\r\n    // this.urlBase = this.urlBaseProduction;\r\n    this.urlBase = `${window.location.origin}/`;\r\n    if(this.urlBase.indexOf(\"localhost\") !== -1){\r\n      this.urlBase = this.urlBaseDevelopment\r\n    }\r\n    // this.setUiData = setUiData\r\n\r\n    // const _this = this\r\n    // this.timerID = setInterval(()=>{\r\n    //   _this.getBooks()\r\n    // }, this.dataRefreshRateSec)\r\n\r\n  }\r\n  \r\n  \r\n\r\n\r\n  // Makes sure we are talking to right backend\r\n  buildURL(url: string){\r\n    return `${this.urlBase}${url}`\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  async getBooks(): Promise<TBookSummary[]>{\r\n    let rawBooks = await httpRequest(this.buildURL(this.urlGetAllBooks));\r\n    return (rawBooks as any[]).map((rawBook: any) => typeConverter.toBookSummary(rawBook))\r\n  }\r\n  async getBookById(bookId: string): Promise<TBookSummary|null>{\r\n    let rawBook = await httpRequest(`${this.buildURL(this.urlGetAllBooks)}/${bookId}`);\r\n    return typeConverter.toBookSummary(rawBook);\r\n  }\r\n  processBook(uiQuery: TUIQuery, cb: Function): Promise<TBookSummary>{\r\n    return new Promise(async (resolve, reject) => {\r\n      await httpRequest(`${this.buildURL(this.urlProcessABook)}`, uiQuery, \"POST\")\r\n      .then((res)=>{\r\n        console.log(res)\r\n        cb();\r\n        resolve(typeConverter.toBookSummary(res));\r\n      })\r\n      .catch((err)=>{\r\n        reject(err);\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}